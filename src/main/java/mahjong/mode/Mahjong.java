// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mahjong.proto

package mahjong.mode;

public final class Mahjong {
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_RoomCardIntoRequest_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_RoomCardIntoRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_RoomCardIntoResponse_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_RoomCardIntoResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_RoomSeatsInfo_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_RoomSeatsInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_SeatResponse_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_SeatResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_DealCardResponse_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_DealCardResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_PengResponse_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_PengResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_Gang_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_Gang_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_Chi_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_Chi_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_HuResponse_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_HuResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_GetCardResponse_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_GetCardResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_PlayCard_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_PlayCard_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_MessageResponse_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_MessageResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.FileDescriptor
          descriptor;

  static {
    java.lang.String[] descriptorData = {
            "\n\rmahjong.proto\032\016gameBase.proto\"1\n\023RoomC" +
                    "ardIntoRequest\022\n\n\002ID\030\001 \001(\r\022\016\n\006roomNo\030\002 \001" +
                    "(\t\"T\n\024RoomCardIntoResponse\022\031\n\005error\030\001 \001(" +
                    "\0162\n.ErrorCode\022\021\n\tbaseScore\030\002 \001(\001\022\016\n\006room" +
                    "No\030\003 \001(\t\"-\n\rRoomSeatsInfo\022\034\n\005seats\030\001 \003(\013" +
                    "2\r.SeatResponse\"o\n\014SeatResponse\022\016\n\006seatN" +
                    "o\030\001 \001(\r\022\n\n\002ID\030\002 \001(\r\022\020\n\010nickname\030\003 \001(\t\022\014\n" +
                    "\004gold\030\004 \001(\001\022\017\n\007isReady\030\005 \001(\010\022\022\n\nareaStri" +
                    "ng\030\006 \001(\t\"?\n\020DealCardResponse\022\016\n\006banker\030\001" +
                    " \001(\r\022\014\n\004dice\030\002 \003(\r\022\r\n\005cards\030\003 \003(\r\"\034\n\014Pen",
            "gResponse\022\014\n\004card\030\002 \001(\r\"\024\n\004Gang\022\014\n\004card\030" +
                    "\001 \001(\r\"\024\n\003Chi\022\r\n\005cards\030\001 \003(\r\"\032\n\nHuRespons" +
                    "e\022\014\n\004card\030\001 \001(\r\"\037\n\017GetCardResponse\022\014\n\004ca" +
                    "rd\030\001 \001(\r\"\030\n\010PlayCard\022\014\n\004card\030\001 \001(\r\"\"\n\017Me" +
                    "ssageResponse\022\017\n\007message\030\001 \001(\tB\016\n\014mahjon" +
                    "g.modeb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
            new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
              public com.google.protobuf.ExtensionRegistry assignDescriptors(
                      com.google.protobuf.Descriptors.FileDescriptor root) {
                descriptor = root;
                return null;
              }
            };
    com.google.protobuf.Descriptors.FileDescriptor
            .internalBuildGeneratedFileFrom(descriptorData,
                    new com.google.protobuf.Descriptors.FileDescriptor[]{
                            mahjong.mode.GameBase.getDescriptor(),
                    }, assigner);
    internal_static_RoomCardIntoRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
    internal_static_RoomCardIntoRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_RoomCardIntoRequest_descriptor,
            new java.lang.String[]{"ID", "RoomNo",});
    internal_static_RoomCardIntoResponse_descriptor =
            getDescriptor().getMessageTypes().get(1);
    internal_static_RoomCardIntoResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_RoomCardIntoResponse_descriptor,
            new java.lang.String[]{"Error", "BaseScore", "RoomNo",});
    internal_static_RoomSeatsInfo_descriptor =
            getDescriptor().getMessageTypes().get(2);
    internal_static_RoomSeatsInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_RoomSeatsInfo_descriptor,
            new java.lang.String[]{"Seats",});
    internal_static_SeatResponse_descriptor =
            getDescriptor().getMessageTypes().get(3);
    internal_static_SeatResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_SeatResponse_descriptor,
            new java.lang.String[]{"SeatNo", "ID", "Nickname", "Gold", "IsReady", "AreaString",});
    internal_static_DealCardResponse_descriptor =
            getDescriptor().getMessageTypes().get(4);
    internal_static_DealCardResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_DealCardResponse_descriptor,
            new java.lang.String[]{"Banker", "Dice", "Cards",});
    internal_static_PengResponse_descriptor =
            getDescriptor().getMessageTypes().get(5);
    internal_static_PengResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_PengResponse_descriptor,
            new java.lang.String[]{"Card",});
    internal_static_Gang_descriptor =
            getDescriptor().getMessageTypes().get(6);
    internal_static_Gang_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_Gang_descriptor,
            new java.lang.String[]{"Card",});
    internal_static_Chi_descriptor =
            getDescriptor().getMessageTypes().get(7);
    internal_static_Chi_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_Chi_descriptor,
            new java.lang.String[]{"Cards",});
    internal_static_HuResponse_descriptor =
            getDescriptor().getMessageTypes().get(8);
    internal_static_HuResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_HuResponse_descriptor,
            new java.lang.String[]{"Card",});
    internal_static_GetCardResponse_descriptor =
            getDescriptor().getMessageTypes().get(9);
    internal_static_GetCardResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_GetCardResponse_descriptor,
            new java.lang.String[]{"Card",});
    internal_static_PlayCard_descriptor =
            getDescriptor().getMessageTypes().get(10);
    internal_static_PlayCard_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_PlayCard_descriptor,
            new java.lang.String[]{"Card",});
    internal_static_MessageResponse_descriptor =
            getDescriptor().getMessageTypes().get(11);
    internal_static_MessageResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_MessageResponse_descriptor,
            new java.lang.String[]{"Message",});
    mahjong.mode.GameBase.getDescriptor();
  }

  private Mahjong() {
  }

  public static void registerAllExtensions(
          com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
          com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
            (com.google.protobuf.ExtensionRegistryLite) registry);
  }

  public static com.google.protobuf.Descriptors.FileDescriptor
  getDescriptor() {
    return descriptor;
  }

  public interface RoomCardIntoRequestOrBuilder extends
          // @@protoc_insertion_point(interface_extends:RoomCardIntoRequest)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 用户名
     * </pre>
     * <p>
     * <code>uint32 ID = 1;</code>
     */
    int getID();

    /**
     * <pre>
     * 房号
     * </pre>
     * <p>
     * <code>string roomNo = 2;</code>
     */
    java.lang.String getRoomNo();

    /**
     * <pre>
     * 房号
     * </pre>
     * <p>
     * <code>string roomNo = 2;</code>
     */
    com.google.protobuf.ByteString
    getRoomNoBytes();
  }

  public interface RoomCardIntoResponseOrBuilder extends
          // @@protoc_insertion_point(interface_extends:RoomCardIntoResponse)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.ErrorCode error = 1;</code>
     */
    int getErrorValue();

    /**
     * <code>.ErrorCode error = 1;</code>
     */
    mahjong.mode.GameBase.ErrorCode getError();

    /**
     * <pre>
     * 基础分
     * </pre>
     * <p>
     * <code>double baseScore = 2;</code>
     */
    double getBaseScore();

    /**
     * <pre>
     * 桌号
     * </pre>
     * <p>
     * <code>string roomNo = 3;</code>
     */
    java.lang.String getRoomNo();

    /**
     * <pre>
     * 桌号
     * </pre>
     * <p>
     * <code>string roomNo = 3;</code>
     */
    com.google.protobuf.ByteString
    getRoomNoBytes();
  }

  public interface RoomSeatsInfoOrBuilder extends
          // @@protoc_insertion_point(interface_extends:RoomSeatsInfo)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 座位
     * </pre>
     * <p>
     * <code>repeated .SeatResponse seats = 1;</code>
     */
    java.util.List<mahjong.mode.Mahjong.SeatResponse>
    getSeatsList();

    /**
     * <pre>
     * 座位
     * </pre>
     * <p>
     * <code>repeated .SeatResponse seats = 1;</code>
     */
    mahjong.mode.Mahjong.SeatResponse getSeats(int index);

    /**
     * <pre>
     * 座位
     * </pre>
     * <p>
     * <code>repeated .SeatResponse seats = 1;</code>
     */
    int getSeatsCount();

    /**
     * <pre>
     * 座位
     * </pre>
     * <p>
     * <code>repeated .SeatResponse seats = 1;</code>
     */
    java.util.List<? extends mahjong.mode.Mahjong.SeatResponseOrBuilder>
    getSeatsOrBuilderList();

    /**
     * <pre>
     * 座位
     * </pre>
     * <p>
     * <code>repeated .SeatResponse seats = 1;</code>
     */
    mahjong.mode.Mahjong.SeatResponseOrBuilder getSeatsOrBuilder(
            int index);
  }

  public interface SeatResponseOrBuilder extends
          // @@protoc_insertion_point(interface_extends:SeatResponse)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 座位号
     * </pre>
     * <p>
     * <code>uint32 seatNo = 1;</code>
     */
    int getSeatNo();

    /**
     * <pre>
     * 用户名
     * </pre>
     * <p>
     * <code>uint32 ID = 2;</code>
     */
    int getID();

    /**
     * <pre>
     * 用户名
     * </pre>
     * <p>
     * <code>string nickname = 3;</code>
     */
    java.lang.String getNickname();

    /**
     * <pre>
     * 用户名
     * </pre>
     * <p>
     * <code>string nickname = 3;</code>
     */
    com.google.protobuf.ByteString
    getNicknameBytes();

    /**
     * <pre>
     * 金币
     * </pre>
     * <p>
     * <code>double gold = 4;</code>
     */
    double getGold();

    /**
     * <pre>
     * 是否准备
     * </pre>
     * <p>
     * <code>bool isReady = 5;</code>
     */
    boolean getIsReady();

    /**
     * <pre>
     * 地区
     * </pre>
     * <p>
     * <code>string areaString = 6;</code>
     */
    java.lang.String getAreaString();

    /**
     * <pre>
     * 地区
     * </pre>
     * <p>
     * <code>string areaString = 6;</code>
     */
    com.google.protobuf.ByteString
    getAreaStringBytes();
  }

  public interface DealCardResponseOrBuilder extends
          // @@protoc_insertion_point(interface_extends:DealCardResponse)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 庄家
     * </pre>
     * <p>
     * <code>uint32 banker = 1;</code>
     */
    int getBanker();

    /**
     * <pre>
     * 骰子
     * </pre>
     * <p>
     * <code>repeated uint32 dice = 2;</code>
     */
    java.util.List<java.lang.Integer> getDiceList();

    /**
     * <pre>
     * 骰子
     * </pre>
     * <p>
     * <code>repeated uint32 dice = 2;</code>
     */
    int getDiceCount();

    /**
     * <pre>
     * 骰子
     * </pre>
     * <p>
     * <code>repeated uint32 dice = 2;</code>
     */
    int getDice(int index);

    /**
     * <pre>
     * 牌
     * </pre>
     * <p>
     * <code>repeated uint32 cards = 3;</code>
     */
    java.util.List<java.lang.Integer> getCardsList();

    /**
     * <pre>
     * 牌
     * </pre>
     * <p>
     * <code>repeated uint32 cards = 3;</code>
     */
    int getCardsCount();

    /**
     * <pre>
     * 牌
     * </pre>
     * <p>
     * <code>repeated uint32 cards = 3;</code>
     */
    int getCards(int index);
  }

  public interface PengResponseOrBuilder extends
          // @@protoc_insertion_point(interface_extends:PengResponse)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 牌
     * </pre>
     * <p>
     * <code>uint32 card = 2;</code>
     */
    int getCard();
  }

  public interface GangOrBuilder extends
          // @@protoc_insertion_point(interface_extends:Gang)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 牌
     * </pre>
     * <p>
     * <code>uint32 card = 1;</code>
     */
    int getCard();
  }

  public interface ChiOrBuilder extends
          // @@protoc_insertion_point(interface_extends:Chi)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 牌
     * </pre>
     * <p>
     * <code>repeated uint32 cards = 1;</code>
     */
    java.util.List<java.lang.Integer> getCardsList();

    /**
     * <pre>
     * 牌
     * </pre>
     * <p>
     * <code>repeated uint32 cards = 1;</code>
     */
    int getCardsCount();

    /**
     * <pre>
     * 牌
     * </pre>
     * <p>
     * <code>repeated uint32 cards = 1;</code>
     */
    int getCards(int index);
  }

  public interface HuResponseOrBuilder extends
          // @@protoc_insertion_point(interface_extends:HuResponse)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 牌
     * </pre>
     * <p>
     * <code>uint32 card = 1;</code>
     */
    int getCard();
  }

  public interface GetCardResponseOrBuilder extends
          // @@protoc_insertion_point(interface_extends:GetCardResponse)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 牌
     * </pre>
     * <p>
     * <code>uint32 card = 1;</code>
     */
    int getCard();
  }

  public interface PlayCardOrBuilder extends
          // @@protoc_insertion_point(interface_extends:PlayCard)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 牌
     * </pre>
     * <p>
     * <code>uint32 card = 1;</code>
     */
    int getCard();
  }

  public interface MessageResponseOrBuilder extends
          // @@protoc_insertion_point(interface_extends:MessageResponse)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 内容
     * </pre>
     * <p>
     * <code>string message = 1;</code>
     */
    java.lang.String getMessage();

    /**
     * <pre>
     * 内容
     * </pre>
     * <p>
     * <code>string message = 1;</code>
     */
    com.google.protobuf.ByteString
    getMessageBytes();
  }

  /**
   * <pre>
   * 房卡模式进入房间请求
   * </pre>
   * <p>
   * Protobuf type {@code RoomCardIntoRequest}
   */
  public static final class RoomCardIntoRequest extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:RoomCardIntoRequest)
          RoomCardIntoRequestOrBuilder {
    public static final int ID_FIELD_NUMBER = 1;
    public static final int ROOMNO_FIELD_NUMBER = 2;
    private static final long serialVersionUID = 0L;
    // @@protoc_insertion_point(class_scope:RoomCardIntoRequest)
    private static final mahjong.mode.Mahjong.RoomCardIntoRequest DEFAULT_INSTANCE;
    private static final com.google.protobuf.Parser<RoomCardIntoRequest>
            PARSER = new com.google.protobuf.AbstractParser<RoomCardIntoRequest>() {
      public RoomCardIntoRequest parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoomCardIntoRequest(input, extensionRegistry);
      }
    };

    static {
      DEFAULT_INSTANCE = new mahjong.mode.Mahjong.RoomCardIntoRequest();
    }

    private int iD_;
    private volatile java.lang.Object roomNo_;
    private byte memoizedIsInitialized = -1;

    // Use RoomCardIntoRequest.newBuilder() to construct.
    private RoomCardIntoRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private RoomCardIntoRequest() {
      iD_ = 0;
      roomNo_ = "";
    }

    private RoomCardIntoRequest(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              iD_ = input.readUInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              roomNo_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return mahjong.mode.Mahjong.internal_static_RoomCardIntoRequest_descriptor;
    }

    public static mahjong.mode.Mahjong.RoomCardIntoRequest parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.RoomCardIntoRequest parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.RoomCardIntoRequest parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.RoomCardIntoRequest parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.RoomCardIntoRequest parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.RoomCardIntoRequest parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.RoomCardIntoRequest parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.RoomCardIntoRequest parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.RoomCardIntoRequest parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.RoomCardIntoRequest parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.RoomCardIntoRequest parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.RoomCardIntoRequest parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(mahjong.mode.Mahjong.RoomCardIntoRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public static mahjong.mode.Mahjong.RoomCardIntoRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static com.google.protobuf.Parser<RoomCardIntoRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mahjong.mode.Mahjong.internal_static_RoomCardIntoRequest_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      mahjong.mode.Mahjong.RoomCardIntoRequest.class, mahjong.mode.Mahjong.RoomCardIntoRequest.Builder.class);
    }

    /**
     * <pre>
     * 用户名
     * </pre>
     * <p>
     * <code>uint32 ID = 1;</code>
     */
    public int getID() {
      return iD_;
    }

    /**
     * <pre>
     * 房号
     * </pre>
     * <p>
     * <code>string roomNo = 2;</code>
     */
    public java.lang.String getRoomNo() {
      java.lang.Object ref = roomNo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        roomNo_ = s;
        return s;
      }
    }

    /**
     * <pre>
     * 房号
     * </pre>
     * <p>
     * <code>string roomNo = 2;</code>
     */
    public com.google.protobuf.ByteString
    getRoomNoBytes() {
      java.lang.Object ref = roomNo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        roomNo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (iD_ != 0) {
        output.writeUInt32(1, iD_);
      }
      if (!getRoomNoBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, roomNo_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (iD_ != 0) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(1, iD_);
      }
      if (!getRoomNoBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, roomNo_);
      }
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof mahjong.mode.Mahjong.RoomCardIntoRequest)) {
        return super.equals(obj);
      }
      mahjong.mode.Mahjong.RoomCardIntoRequest other = (mahjong.mode.Mahjong.RoomCardIntoRequest) obj;

      boolean result = true;
      result = result && (getID()
              == other.getID());
      result = result && getRoomNo()
              .equals(other.getRoomNo());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getID();
      hash = (37 * hash) + ROOMNO_FIELD_NUMBER;
      hash = (53 * hash) + getRoomNo().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RoomCardIntoRequest> getParserForType() {
      return PARSER;
    }

    public mahjong.mode.Mahjong.RoomCardIntoRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    /**
     * <pre>
     * 房卡模式进入房间请求
     * </pre>
     * <p>
     * Protobuf type {@code RoomCardIntoRequest}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:RoomCardIntoRequest)
            mahjong.mode.Mahjong.RoomCardIntoRequestOrBuilder {
      private int iD_;
      private java.lang.Object roomNo_ = "";

      // Construct using mahjong.mode.Mahjong.RoomCardIntoRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return mahjong.mode.Mahjong.internal_static_RoomCardIntoRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return mahjong.mode.Mahjong.internal_static_RoomCardIntoRequest_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        mahjong.mode.Mahjong.RoomCardIntoRequest.class, mahjong.mode.Mahjong.RoomCardIntoRequest.Builder.class);
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }

      public Builder clear() {
        super.clear();
        iD_ = 0;

        roomNo_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return mahjong.mode.Mahjong.internal_static_RoomCardIntoRequest_descriptor;
      }

      public mahjong.mode.Mahjong.RoomCardIntoRequest getDefaultInstanceForType() {
        return mahjong.mode.Mahjong.RoomCardIntoRequest.getDefaultInstance();
      }

      public mahjong.mode.Mahjong.RoomCardIntoRequest build() {
        mahjong.mode.Mahjong.RoomCardIntoRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public mahjong.mode.Mahjong.RoomCardIntoRequest buildPartial() {
        mahjong.mode.Mahjong.RoomCardIntoRequest result = new mahjong.mode.Mahjong.RoomCardIntoRequest(this);
        result.iD_ = iD_;
        result.roomNo_ = roomNo_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }

      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mahjong.mode.Mahjong.RoomCardIntoRequest) {
          return mergeFrom((mahjong.mode.Mahjong.RoomCardIntoRequest) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(mahjong.mode.Mahjong.RoomCardIntoRequest other) {
        if (other == mahjong.mode.Mahjong.RoomCardIntoRequest.getDefaultInstance()) return this;
        if (other.getID() != 0) {
          setID(other.getID());
        }
        if (!other.getRoomNo().isEmpty()) {
          roomNo_ = other.roomNo_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        mahjong.mode.Mahjong.RoomCardIntoRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mahjong.mode.Mahjong.RoomCardIntoRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      /**
       * <pre>
       * 用户名
       * </pre>
       * <p>
       * <code>uint32 ID = 1;</code>
       */
      public int getID() {
        return iD_;
      }

      /**
       * <pre>
       * 用户名
       * </pre>
       * <p>
       * <code>uint32 ID = 1;</code>
       */
      public Builder setID(int value) {

        iD_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 用户名
       * </pre>
       * <p>
       * <code>uint32 ID = 1;</code>
       */
      public Builder clearID() {

        iD_ = 0;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 房号
       * </pre>
       * <p>
       * <code>string roomNo = 2;</code>
       */
      public java.lang.String getRoomNo() {
        java.lang.Object ref = roomNo_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          roomNo_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       * <pre>
       * 房号
       * </pre>
       * <p>
       * <code>string roomNo = 2;</code>
       */
      public Builder setRoomNo(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        roomNo_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 房号
       * </pre>
       * <p>
       * <code>string roomNo = 2;</code>
       */
      public com.google.protobuf.ByteString
      getRoomNoBytes() {
        java.lang.Object ref = roomNo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          roomNo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <pre>
       * 房号
       * </pre>
       * <p>
       * <code>string roomNo = 2;</code>
       */
      public Builder setRoomNoBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        roomNo_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 房号
       * </pre>
       * <p>
       * <code>string roomNo = 2;</code>
       */
      public Builder clearRoomNo() {

        roomNo_ = getDefaultInstance().getRoomNo();
        onChanged();
        return this;
      }

      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:RoomCardIntoRequest)
    }

  }

  /**
   * <pre>
   * 进入房间返回
   * </pre>
   * <p>
   * Protobuf type {@code RoomCardIntoResponse}
   */
  public static final class RoomCardIntoResponse extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:RoomCardIntoResponse)
          RoomCardIntoResponseOrBuilder {
    public static final int ERROR_FIELD_NUMBER = 1;
    public static final int BASESCORE_FIELD_NUMBER = 2;
    public static final int ROOMNO_FIELD_NUMBER = 3;
    private static final long serialVersionUID = 0L;
    // @@protoc_insertion_point(class_scope:RoomCardIntoResponse)
    private static final mahjong.mode.Mahjong.RoomCardIntoResponse DEFAULT_INSTANCE;
    private static final com.google.protobuf.Parser<RoomCardIntoResponse>
            PARSER = new com.google.protobuf.AbstractParser<RoomCardIntoResponse>() {
      public RoomCardIntoResponse parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoomCardIntoResponse(input, extensionRegistry);
      }
    };

    static {
      DEFAULT_INSTANCE = new mahjong.mode.Mahjong.RoomCardIntoResponse();
    }

    private int error_;
    private double baseScore_;
    private volatile java.lang.Object roomNo_;
    private byte memoizedIsInitialized = -1;

    // Use RoomCardIntoResponse.newBuilder() to construct.
    private RoomCardIntoResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private RoomCardIntoResponse() {
      error_ = 0;
      baseScore_ = 0D;
      roomNo_ = "";
    }

    private RoomCardIntoResponse(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              error_ = rawValue;
              break;
            }
            case 17: {

              baseScore_ = input.readDouble();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              roomNo_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return mahjong.mode.Mahjong.internal_static_RoomCardIntoResponse_descriptor;
    }

    public static mahjong.mode.Mahjong.RoomCardIntoResponse parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.RoomCardIntoResponse parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.RoomCardIntoResponse parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.RoomCardIntoResponse parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.RoomCardIntoResponse parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.RoomCardIntoResponse parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.RoomCardIntoResponse parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.RoomCardIntoResponse parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.RoomCardIntoResponse parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.RoomCardIntoResponse parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.RoomCardIntoResponse parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.RoomCardIntoResponse parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(mahjong.mode.Mahjong.RoomCardIntoResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public static mahjong.mode.Mahjong.RoomCardIntoResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static com.google.protobuf.Parser<RoomCardIntoResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return mahjong.mode.Mahjong.internal_static_RoomCardIntoResponse_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      mahjong.mode.Mahjong.RoomCardIntoResponse.class, mahjong.mode.Mahjong.RoomCardIntoResponse.Builder.class);
    }

    /**
     * <code>.ErrorCode error = 1;</code>
     */
    public int getErrorValue() {
      return error_;
    }

    /**
     * <code>.ErrorCode error = 1;</code>
     */
    public mahjong.mode.GameBase.ErrorCode getError() {
      mahjong.mode.GameBase.ErrorCode result = mahjong.mode.GameBase.ErrorCode.valueOf(error_);
      return result == null ? mahjong.mode.GameBase.ErrorCode.UNRECOGNIZED : result;
    }

    /**
     * <pre>
     * 基础分
     * </pre>
     * <p>
     * <code>double baseScore = 2;</code>
     */
    public double getBaseScore() {
      return baseScore_;
    }

    /**
     * <pre>
     * 桌号
     * </pre>
     * <p>
     * <code>string roomNo = 3;</code>
     */
    public java.lang.String getRoomNo() {
      java.lang.Object ref = roomNo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        roomNo_ = s;
        return s;
      }
    }

    /**
     * <pre>
     * 桌号
     * </pre>
     * <p>
     * <code>string roomNo = 3;</code>
     */
    public com.google.protobuf.ByteString
    getRoomNoBytes() {
      java.lang.Object ref = roomNo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        roomNo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (error_ != mahjong.mode.GameBase.ErrorCode.SUCCESS.getNumber()) {
        output.writeEnum(1, error_);
      }
      if (baseScore_ != 0D) {
        output.writeDouble(2, baseScore_);
      }
      if (!getRoomNoBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, roomNo_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (error_ != mahjong.mode.GameBase.ErrorCode.SUCCESS.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
                .computeEnumSize(1, error_);
      }
      if (baseScore_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
                .computeDoubleSize(2, baseScore_);
      }
      if (!getRoomNoBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, roomNo_);
      }
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof mahjong.mode.Mahjong.RoomCardIntoResponse)) {
        return super.equals(obj);
      }
      mahjong.mode.Mahjong.RoomCardIntoResponse other = (mahjong.mode.Mahjong.RoomCardIntoResponse) obj;

      boolean result = true;
      result = result && error_ == other.error_;
      result = result && (
              java.lang.Double.doubleToLongBits(getBaseScore())
                      == java.lang.Double.doubleToLongBits(
                      other.getBaseScore()));
      result = result && getRoomNo()
              .equals(other.getRoomNo());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ERROR_FIELD_NUMBER;
      hash = (53 * hash) + error_;
      hash = (37 * hash) + BASESCORE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getBaseScore()));
      hash = (37 * hash) + ROOMNO_FIELD_NUMBER;
      hash = (53 * hash) + getRoomNo().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RoomCardIntoResponse> getParserForType() {
      return PARSER;
    }

    public mahjong.mode.Mahjong.RoomCardIntoResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    /**
     * <pre>
     * 进入房间返回
     * </pre>
     * <p>
     * Protobuf type {@code RoomCardIntoResponse}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:RoomCardIntoResponse)
            mahjong.mode.Mahjong.RoomCardIntoResponseOrBuilder {
      private int error_ = 0;
      private double baseScore_;
      private java.lang.Object roomNo_ = "";

      // Construct using mahjong.mode.Mahjong.RoomCardIntoResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return mahjong.mode.Mahjong.internal_static_RoomCardIntoResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return mahjong.mode.Mahjong.internal_static_RoomCardIntoResponse_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        mahjong.mode.Mahjong.RoomCardIntoResponse.class, mahjong.mode.Mahjong.RoomCardIntoResponse.Builder.class);
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }

      public Builder clear() {
        super.clear();
        error_ = 0;

        baseScore_ = 0D;

        roomNo_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return mahjong.mode.Mahjong.internal_static_RoomCardIntoResponse_descriptor;
      }

      public mahjong.mode.Mahjong.RoomCardIntoResponse getDefaultInstanceForType() {
        return mahjong.mode.Mahjong.RoomCardIntoResponse.getDefaultInstance();
      }

      public mahjong.mode.Mahjong.RoomCardIntoResponse build() {
        mahjong.mode.Mahjong.RoomCardIntoResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public mahjong.mode.Mahjong.RoomCardIntoResponse buildPartial() {
        mahjong.mode.Mahjong.RoomCardIntoResponse result = new mahjong.mode.Mahjong.RoomCardIntoResponse(this);
        result.error_ = error_;
        result.baseScore_ = baseScore_;
        result.roomNo_ = roomNo_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }

      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mahjong.mode.Mahjong.RoomCardIntoResponse) {
          return mergeFrom((mahjong.mode.Mahjong.RoomCardIntoResponse) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(mahjong.mode.Mahjong.RoomCardIntoResponse other) {
        if (other == mahjong.mode.Mahjong.RoomCardIntoResponse.getDefaultInstance()) return this;
        if (other.error_ != 0) {
          setErrorValue(other.getErrorValue());
        }
        if (other.getBaseScore() != 0D) {
          setBaseScore(other.getBaseScore());
        }
        if (!other.getRoomNo().isEmpty()) {
          roomNo_ = other.roomNo_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        mahjong.mode.Mahjong.RoomCardIntoResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mahjong.mode.Mahjong.RoomCardIntoResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      /**
       * <code>.ErrorCode error = 1;</code>
       */
      public int getErrorValue() {
        return error_;
      }

      /**
       * <code>.ErrorCode error = 1;</code>
       */
      public Builder setErrorValue(int value) {
        error_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>.ErrorCode error = 1;</code>
       */
      public mahjong.mode.GameBase.ErrorCode getError() {
        mahjong.mode.GameBase.ErrorCode result = mahjong.mode.GameBase.ErrorCode.valueOf(error_);
        return result == null ? mahjong.mode.GameBase.ErrorCode.UNRECOGNIZED : result;
      }

      /**
       * <code>.ErrorCode error = 1;</code>
       */
      public Builder setError(mahjong.mode.GameBase.ErrorCode value) {
        if (value == null) {
          throw new NullPointerException();
        }

        error_ = value.getNumber();
        onChanged();
        return this;
      }

      /**
       * <code>.ErrorCode error = 1;</code>
       */
      public Builder clearError() {

        error_ = 0;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 基础分
       * </pre>
       * <p>
       * <code>double baseScore = 2;</code>
       */
      public double getBaseScore() {
        return baseScore_;
      }

      /**
       * <pre>
       * 基础分
       * </pre>
       * <p>
       * <code>double baseScore = 2;</code>
       */
      public Builder setBaseScore(double value) {

        baseScore_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 基础分
       * </pre>
       * <p>
       * <code>double baseScore = 2;</code>
       */
      public Builder clearBaseScore() {

        baseScore_ = 0D;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 桌号
       * </pre>
       * <p>
       * <code>string roomNo = 3;</code>
       */
      public java.lang.String getRoomNo() {
        java.lang.Object ref = roomNo_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          roomNo_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       * <pre>
       * 桌号
       * </pre>
       * <p>
       * <code>string roomNo = 3;</code>
       */
      public Builder setRoomNo(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        roomNo_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 桌号
       * </pre>
       * <p>
       * <code>string roomNo = 3;</code>
       */
      public com.google.protobuf.ByteString
      getRoomNoBytes() {
        java.lang.Object ref = roomNo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          roomNo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <pre>
       * 桌号
       * </pre>
       * <p>
       * <code>string roomNo = 3;</code>
       */
      public Builder setRoomNoBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        roomNo_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 桌号
       * </pre>
       * <p>
       * <code>string roomNo = 3;</code>
       */
      public Builder clearRoomNo() {

        roomNo_ = getDefaultInstance().getRoomNo();
        onChanged();
        return this;
      }

      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:RoomCardIntoResponse)
    }

  }

  /**
   * <pre>
   * 所有玩家信息
   * </pre>
   * <p>
   * Protobuf type {@code RoomSeatsInfo}
   */
  public static final class RoomSeatsInfo extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:RoomSeatsInfo)
          RoomSeatsInfoOrBuilder {
    public static final int SEATS_FIELD_NUMBER = 1;
    private static final long serialVersionUID = 0L;
    // @@protoc_insertion_point(class_scope:RoomSeatsInfo)
    private static final mahjong.mode.Mahjong.RoomSeatsInfo DEFAULT_INSTANCE;
    private static final com.google.protobuf.Parser<RoomSeatsInfo>
            PARSER = new com.google.protobuf.AbstractParser<RoomSeatsInfo>() {
      public RoomSeatsInfo parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoomSeatsInfo(input, extensionRegistry);
      }
    };

    static {
      DEFAULT_INSTANCE = new mahjong.mode.Mahjong.RoomSeatsInfo();
    }

    private java.util.List<mahjong.mode.Mahjong.SeatResponse> seats_;
    private byte memoizedIsInitialized = -1;

    // Use RoomSeatsInfo.newBuilder() to construct.
    private RoomSeatsInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private RoomSeatsInfo() {
      seats_ = java.util.Collections.emptyList();
    }

    private RoomSeatsInfo(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                seats_ = new java.util.ArrayList<mahjong.mode.Mahjong.SeatResponse>();
                mutable_bitField0_ |= 0x00000001;
              }
              seats_.add(
                      input.readMessage(mahjong.mode.Mahjong.SeatResponse.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          seats_ = java.util.Collections.unmodifiableList(seats_);
        }
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return mahjong.mode.Mahjong.internal_static_RoomSeatsInfo_descriptor;
    }

    public static mahjong.mode.Mahjong.RoomSeatsInfo parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.RoomSeatsInfo parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.RoomSeatsInfo parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.RoomSeatsInfo parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.RoomSeatsInfo parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.RoomSeatsInfo parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.RoomSeatsInfo parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.RoomSeatsInfo parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.RoomSeatsInfo parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.RoomSeatsInfo parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.RoomSeatsInfo parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.RoomSeatsInfo parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(mahjong.mode.Mahjong.RoomSeatsInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public static mahjong.mode.Mahjong.RoomSeatsInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static com.google.protobuf.Parser<RoomSeatsInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return mahjong.mode.Mahjong.internal_static_RoomSeatsInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      mahjong.mode.Mahjong.RoomSeatsInfo.class, mahjong.mode.Mahjong.RoomSeatsInfo.Builder.class);
    }

    /**
     * <pre>
     * 座位
     * </pre>
     * <p>
     * <code>repeated .SeatResponse seats = 1;</code>
     */
    public java.util.List<mahjong.mode.Mahjong.SeatResponse> getSeatsList() {
      return seats_;
    }

    /**
     * <pre>
     * 座位
     * </pre>
     * <p>
     * <code>repeated .SeatResponse seats = 1;</code>
     */
    public java.util.List<? extends mahjong.mode.Mahjong.SeatResponseOrBuilder>
    getSeatsOrBuilderList() {
      return seats_;
    }

    /**
     * <pre>
     * 座位
     * </pre>
     * <p>
     * <code>repeated .SeatResponse seats = 1;</code>
     */
    public int getSeatsCount() {
      return seats_.size();
    }

    /**
     * <pre>
     * 座位
     * </pre>
     * <p>
     * <code>repeated .SeatResponse seats = 1;</code>
     */
    public mahjong.mode.Mahjong.SeatResponse getSeats(int index) {
      return seats_.get(index);
    }

    /**
     * <pre>
     * 座位
     * </pre>
     * <p>
     * <code>repeated .SeatResponse seats = 1;</code>
     */
    public mahjong.mode.Mahjong.SeatResponseOrBuilder getSeatsOrBuilder(
            int index) {
      return seats_.get(index);
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      for (int i = 0; i < seats_.size(); i++) {
        output.writeMessage(1, seats_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < seats_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(1, seats_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof mahjong.mode.Mahjong.RoomSeatsInfo)) {
        return super.equals(obj);
      }
      mahjong.mode.Mahjong.RoomSeatsInfo other = (mahjong.mode.Mahjong.RoomSeatsInfo) obj;

      boolean result = true;
      result = result && getSeatsList()
              .equals(other.getSeatsList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getSeatsCount() > 0) {
        hash = (37 * hash) + SEATS_FIELD_NUMBER;
        hash = (53 * hash) + getSeatsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RoomSeatsInfo> getParserForType() {
      return PARSER;
    }

    public mahjong.mode.Mahjong.RoomSeatsInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    /**
     * <pre>
     * 所有玩家信息
     * </pre>
     * <p>
     * Protobuf type {@code RoomSeatsInfo}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:RoomSeatsInfo)
            mahjong.mode.Mahjong.RoomSeatsInfoOrBuilder {
      private int bitField0_;
      private java.util.List<mahjong.mode.Mahjong.SeatResponse> seats_ =
              java.util.Collections.emptyList();
      private com.google.protobuf.RepeatedFieldBuilderV3<
              mahjong.mode.Mahjong.SeatResponse, mahjong.mode.Mahjong.SeatResponse.Builder, mahjong.mode.Mahjong.SeatResponseOrBuilder> seatsBuilder_;

      // Construct using mahjong.mode.Mahjong.RoomSeatsInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return mahjong.mode.Mahjong.internal_static_RoomSeatsInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return mahjong.mode.Mahjong.internal_static_RoomSeatsInfo_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        mahjong.mode.Mahjong.RoomSeatsInfo.class, mahjong.mode.Mahjong.RoomSeatsInfo.Builder.class);
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSeatsFieldBuilder();
        }
      }

      public Builder clear() {
        super.clear();
        if (seatsBuilder_ == null) {
          seats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          seatsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return mahjong.mode.Mahjong.internal_static_RoomSeatsInfo_descriptor;
      }

      public mahjong.mode.Mahjong.RoomSeatsInfo getDefaultInstanceForType() {
        return mahjong.mode.Mahjong.RoomSeatsInfo.getDefaultInstance();
      }

      public mahjong.mode.Mahjong.RoomSeatsInfo build() {
        mahjong.mode.Mahjong.RoomSeatsInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public mahjong.mode.Mahjong.RoomSeatsInfo buildPartial() {
        mahjong.mode.Mahjong.RoomSeatsInfo result = new mahjong.mode.Mahjong.RoomSeatsInfo(this);
        int from_bitField0_ = bitField0_;
        if (seatsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            seats_ = java.util.Collections.unmodifiableList(seats_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.seats_ = seats_;
        } else {
          result.seats_ = seatsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }

      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mahjong.mode.Mahjong.RoomSeatsInfo) {
          return mergeFrom((mahjong.mode.Mahjong.RoomSeatsInfo) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(mahjong.mode.Mahjong.RoomSeatsInfo other) {
        if (other == mahjong.mode.Mahjong.RoomSeatsInfo.getDefaultInstance()) return this;
        if (seatsBuilder_ == null) {
          if (!other.seats_.isEmpty()) {
            if (seats_.isEmpty()) {
              seats_ = other.seats_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSeatsIsMutable();
              seats_.addAll(other.seats_);
            }
            onChanged();
          }
        } else {
          if (!other.seats_.isEmpty()) {
            if (seatsBuilder_.isEmpty()) {
              seatsBuilder_.dispose();
              seatsBuilder_ = null;
              seats_ = other.seats_;
              bitField0_ = (bitField0_ & ~0x00000001);
              seatsBuilder_ =
                      com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                              getSeatsFieldBuilder() : null;
            } else {
              seatsBuilder_.addAllMessages(other.seats_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        mahjong.mode.Mahjong.RoomSeatsInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mahjong.mode.Mahjong.RoomSeatsInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private void ensureSeatsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          seats_ = new java.util.ArrayList<mahjong.mode.Mahjong.SeatResponse>(seats_);
          bitField0_ |= 0x00000001;
        }
      }

      /**
       * <pre>
       * 座位
       * </pre>
       * <p>
       * <code>repeated .SeatResponse seats = 1;</code>
       */
      public java.util.List<mahjong.mode.Mahjong.SeatResponse> getSeatsList() {
        if (seatsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(seats_);
        } else {
          return seatsBuilder_.getMessageList();
        }
      }

      /**
       * <pre>
       * 座位
       * </pre>
       * <p>
       * <code>repeated .SeatResponse seats = 1;</code>
       */
      public int getSeatsCount() {
        if (seatsBuilder_ == null) {
          return seats_.size();
        } else {
          return seatsBuilder_.getCount();
        }
      }

      /**
       * <pre>
       * 座位
       * </pre>
       * <p>
       * <code>repeated .SeatResponse seats = 1;</code>
       */
      public mahjong.mode.Mahjong.SeatResponse getSeats(int index) {
        if (seatsBuilder_ == null) {
          return seats_.get(index);
        } else {
          return seatsBuilder_.getMessage(index);
        }
      }

      /**
       * <pre>
       * 座位
       * </pre>
       * <p>
       * <code>repeated .SeatResponse seats = 1;</code>
       */
      public Builder setSeats(
              int index, mahjong.mode.Mahjong.SeatResponse value) {
        if (seatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSeatsIsMutable();
          seats_.set(index, value);
          onChanged();
        } else {
          seatsBuilder_.setMessage(index, value);
        }
        return this;
      }

      /**
       * <pre>
       * 座位
       * </pre>
       * <p>
       * <code>repeated .SeatResponse seats = 1;</code>
       */
      public Builder setSeats(
              int index, mahjong.mode.Mahjong.SeatResponse.Builder builderForValue) {
        if (seatsBuilder_ == null) {
          ensureSeatsIsMutable();
          seats_.set(index, builderForValue.build());
          onChanged();
        } else {
          seatsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }

      /**
       * <pre>
       * 座位
       * </pre>
       * <p>
       * <code>repeated .SeatResponse seats = 1;</code>
       */
      public Builder addSeats(mahjong.mode.Mahjong.SeatResponse value) {
        if (seatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSeatsIsMutable();
          seats_.add(value);
          onChanged();
        } else {
          seatsBuilder_.addMessage(value);
        }
        return this;
      }

      /**
       * <pre>
       * 座位
       * </pre>
       * <p>
       * <code>repeated .SeatResponse seats = 1;</code>
       */
      public Builder addSeats(
              int index, mahjong.mode.Mahjong.SeatResponse value) {
        if (seatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSeatsIsMutable();
          seats_.add(index, value);
          onChanged();
        } else {
          seatsBuilder_.addMessage(index, value);
        }
        return this;
      }

      /**
       * <pre>
       * 座位
       * </pre>
       * <p>
       * <code>repeated .SeatResponse seats = 1;</code>
       */
      public Builder addSeats(
              mahjong.mode.Mahjong.SeatResponse.Builder builderForValue) {
        if (seatsBuilder_ == null) {
          ensureSeatsIsMutable();
          seats_.add(builderForValue.build());
          onChanged();
        } else {
          seatsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }

      /**
       * <pre>
       * 座位
       * </pre>
       * <p>
       * <code>repeated .SeatResponse seats = 1;</code>
       */
      public Builder addSeats(
              int index, mahjong.mode.Mahjong.SeatResponse.Builder builderForValue) {
        if (seatsBuilder_ == null) {
          ensureSeatsIsMutable();
          seats_.add(index, builderForValue.build());
          onChanged();
        } else {
          seatsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }

      /**
       * <pre>
       * 座位
       * </pre>
       * <p>
       * <code>repeated .SeatResponse seats = 1;</code>
       */
      public Builder addAllSeats(
              java.lang.Iterable<? extends mahjong.mode.Mahjong.SeatResponse> values) {
        if (seatsBuilder_ == null) {
          ensureSeatsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, seats_);
          onChanged();
        } else {
          seatsBuilder_.addAllMessages(values);
        }
        return this;
      }

      /**
       * <pre>
       * 座位
       * </pre>
       * <p>
       * <code>repeated .SeatResponse seats = 1;</code>
       */
      public Builder clearSeats() {
        if (seatsBuilder_ == null) {
          seats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          seatsBuilder_.clear();
        }
        return this;
      }

      /**
       * <pre>
       * 座位
       * </pre>
       * <p>
       * <code>repeated .SeatResponse seats = 1;</code>
       */
      public Builder removeSeats(int index) {
        if (seatsBuilder_ == null) {
          ensureSeatsIsMutable();
          seats_.remove(index);
          onChanged();
        } else {
          seatsBuilder_.remove(index);
        }
        return this;
      }

      /**
       * <pre>
       * 座位
       * </pre>
       * <p>
       * <code>repeated .SeatResponse seats = 1;</code>
       */
      public mahjong.mode.Mahjong.SeatResponse.Builder getSeatsBuilder(
              int index) {
        return getSeatsFieldBuilder().getBuilder(index);
      }

      /**
       * <pre>
       * 座位
       * </pre>
       * <p>
       * <code>repeated .SeatResponse seats = 1;</code>
       */
      public mahjong.mode.Mahjong.SeatResponseOrBuilder getSeatsOrBuilder(
              int index) {
        if (seatsBuilder_ == null) {
          return seats_.get(index);
        } else {
          return seatsBuilder_.getMessageOrBuilder(index);
        }
      }

      /**
       * <pre>
       * 座位
       * </pre>
       * <p>
       * <code>repeated .SeatResponse seats = 1;</code>
       */
      public java.util.List<? extends mahjong.mode.Mahjong.SeatResponseOrBuilder>
      getSeatsOrBuilderList() {
        if (seatsBuilder_ != null) {
          return seatsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(seats_);
        }
      }

      /**
       * <pre>
       * 座位
       * </pre>
       * <p>
       * <code>repeated .SeatResponse seats = 1;</code>
       */
      public mahjong.mode.Mahjong.SeatResponse.Builder addSeatsBuilder() {
        return getSeatsFieldBuilder().addBuilder(
                mahjong.mode.Mahjong.SeatResponse.getDefaultInstance());
      }

      /**
       * <pre>
       * 座位
       * </pre>
       * <p>
       * <code>repeated .SeatResponse seats = 1;</code>
       */
      public mahjong.mode.Mahjong.SeatResponse.Builder addSeatsBuilder(
              int index) {
        return getSeatsFieldBuilder().addBuilder(
                index, mahjong.mode.Mahjong.SeatResponse.getDefaultInstance());
      }

      /**
       * <pre>
       * 座位
       * </pre>
       * <p>
       * <code>repeated .SeatResponse seats = 1;</code>
       */
      public java.util.List<mahjong.mode.Mahjong.SeatResponse.Builder>
      getSeatsBuilderList() {
        return getSeatsFieldBuilder().getBuilderList();
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              mahjong.mode.Mahjong.SeatResponse, mahjong.mode.Mahjong.SeatResponse.Builder, mahjong.mode.Mahjong.SeatResponseOrBuilder>
      getSeatsFieldBuilder() {
        if (seatsBuilder_ == null) {
          seatsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  mahjong.mode.Mahjong.SeatResponse, mahjong.mode.Mahjong.SeatResponse.Builder, mahjong.mode.Mahjong.SeatResponseOrBuilder>(
                  seats_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          seats_ = null;
        }
        return seatsBuilder_;
      }

      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:RoomSeatsInfo)
    }

  }

  /**
   * <pre>
   * 玩家信息
   * </pre>
   * <p>
   * Protobuf type {@code SeatResponse}
   */
  public static final class SeatResponse extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:SeatResponse)
          SeatResponseOrBuilder {
    public static final int SEATNO_FIELD_NUMBER = 1;
    public static final int ID_FIELD_NUMBER = 2;
    public static final int NICKNAME_FIELD_NUMBER = 3;
    public static final int GOLD_FIELD_NUMBER = 4;
    public static final int ISREADY_FIELD_NUMBER = 5;
    public static final int AREASTRING_FIELD_NUMBER = 6;
    private static final long serialVersionUID = 0L;
    // @@protoc_insertion_point(class_scope:SeatResponse)
    private static final mahjong.mode.Mahjong.SeatResponse DEFAULT_INSTANCE;
    private static final com.google.protobuf.Parser<SeatResponse>
            PARSER = new com.google.protobuf.AbstractParser<SeatResponse>() {
      public SeatResponse parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new SeatResponse(input, extensionRegistry);
      }
    };

    static {
      DEFAULT_INSTANCE = new mahjong.mode.Mahjong.SeatResponse();
    }

    private int seatNo_;
    private int iD_;
    private volatile java.lang.Object nickname_;
    private double gold_;
    private boolean isReady_;
    private volatile java.lang.Object areaString_;
    private byte memoizedIsInitialized = -1;

    // Use SeatResponse.newBuilder() to construct.
    private SeatResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private SeatResponse() {
      seatNo_ = 0;
      iD_ = 0;
      nickname_ = "";
      gold_ = 0D;
      isReady_ = false;
      areaString_ = "";
    }

    private SeatResponse(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              seatNo_ = input.readUInt32();
              break;
            }
            case 16: {

              iD_ = input.readUInt32();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              nickname_ = s;
              break;
            }
            case 33: {

              gold_ = input.readDouble();
              break;
            }
            case 40: {

              isReady_ = input.readBool();
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              areaString_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return mahjong.mode.Mahjong.internal_static_SeatResponse_descriptor;
    }

    public static mahjong.mode.Mahjong.SeatResponse parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.SeatResponse parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.SeatResponse parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.SeatResponse parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.SeatResponse parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.SeatResponse parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.SeatResponse parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.SeatResponse parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.SeatResponse parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.SeatResponse parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.SeatResponse parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.SeatResponse parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(mahjong.mode.Mahjong.SeatResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public static mahjong.mode.Mahjong.SeatResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static com.google.protobuf.Parser<SeatResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return mahjong.mode.Mahjong.internal_static_SeatResponse_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      mahjong.mode.Mahjong.SeatResponse.class, mahjong.mode.Mahjong.SeatResponse.Builder.class);
    }

    /**
     * <pre>
     * 座位号
     * </pre>
     * <p>
     * <code>uint32 seatNo = 1;</code>
     */
    public int getSeatNo() {
      return seatNo_;
    }

    /**
     * <pre>
     * 用户名
     * </pre>
     * <p>
     * <code>uint32 ID = 2;</code>
     */
    public int getID() {
      return iD_;
    }

    /**
     * <pre>
     * 用户名
     * </pre>
     * <p>
     * <code>string nickname = 3;</code>
     */
    public java.lang.String getNickname() {
      java.lang.Object ref = nickname_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nickname_ = s;
        return s;
      }
    }

    /**
     * <pre>
     * 用户名
     * </pre>
     * <p>
     * <code>string nickname = 3;</code>
     */
    public com.google.protobuf.ByteString
    getNicknameBytes() {
      java.lang.Object ref = nickname_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        nickname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     * <pre>
     * 金币
     * </pre>
     * <p>
     * <code>double gold = 4;</code>
     */
    public double getGold() {
      return gold_;
    }

    /**
     * <pre>
     * 是否准备
     * </pre>
     * <p>
     * <code>bool isReady = 5;</code>
     */
    public boolean getIsReady() {
      return isReady_;
    }

    /**
     * <pre>
     * 地区
     * </pre>
     * <p>
     * <code>string areaString = 6;</code>
     */
    public java.lang.String getAreaString() {
      java.lang.Object ref = areaString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        areaString_ = s;
        return s;
      }
    }

    /**
     * <pre>
     * 地区
     * </pre>
     * <p>
     * <code>string areaString = 6;</code>
     */
    public com.google.protobuf.ByteString
    getAreaStringBytes() {
      java.lang.Object ref = areaString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        areaString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (seatNo_ != 0) {
        output.writeUInt32(1, seatNo_);
      }
      if (iD_ != 0) {
        output.writeUInt32(2, iD_);
      }
      if (!getNicknameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, nickname_);
      }
      if (gold_ != 0D) {
        output.writeDouble(4, gold_);
      }
      if (isReady_ != false) {
        output.writeBool(5, isReady_);
      }
      if (!getAreaStringBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, areaString_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (seatNo_ != 0) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(1, seatNo_);
      }
      if (iD_ != 0) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(2, iD_);
      }
      if (!getNicknameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, nickname_);
      }
      if (gold_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
                .computeDoubleSize(4, gold_);
      }
      if (isReady_ != false) {
        size += com.google.protobuf.CodedOutputStream
                .computeBoolSize(5, isReady_);
      }
      if (!getAreaStringBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, areaString_);
      }
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof mahjong.mode.Mahjong.SeatResponse)) {
        return super.equals(obj);
      }
      mahjong.mode.Mahjong.SeatResponse other = (mahjong.mode.Mahjong.SeatResponse) obj;

      boolean result = true;
      result = result && (getSeatNo()
              == other.getSeatNo());
      result = result && (getID()
              == other.getID());
      result = result && getNickname()
              .equals(other.getNickname());
      result = result && (
              java.lang.Double.doubleToLongBits(getGold())
                      == java.lang.Double.doubleToLongBits(
                      other.getGold()));
      result = result && (getIsReady()
              == other.getIsReady());
      result = result && getAreaString()
              .equals(other.getAreaString());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SEATNO_FIELD_NUMBER;
      hash = (53 * hash) + getSeatNo();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getID();
      hash = (37 * hash) + NICKNAME_FIELD_NUMBER;
      hash = (53 * hash) + getNickname().hashCode();
      hash = (37 * hash) + GOLD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getGold()));
      hash = (37 * hash) + ISREADY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getIsReady());
      hash = (37 * hash) + AREASTRING_FIELD_NUMBER;
      hash = (53 * hash) + getAreaString().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SeatResponse> getParserForType() {
      return PARSER;
    }

    public mahjong.mode.Mahjong.SeatResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    /**
     * <pre>
     * 玩家信息
     * </pre>
     * <p>
     * Protobuf type {@code SeatResponse}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:SeatResponse)
            mahjong.mode.Mahjong.SeatResponseOrBuilder {
      private int seatNo_;
      private int iD_;
      private java.lang.Object nickname_ = "";
      private double gold_;
      private boolean isReady_;
      private java.lang.Object areaString_ = "";

      // Construct using mahjong.mode.Mahjong.SeatResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return mahjong.mode.Mahjong.internal_static_SeatResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return mahjong.mode.Mahjong.internal_static_SeatResponse_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        mahjong.mode.Mahjong.SeatResponse.class, mahjong.mode.Mahjong.SeatResponse.Builder.class);
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }

      public Builder clear() {
        super.clear();
        seatNo_ = 0;

        iD_ = 0;

        nickname_ = "";

        gold_ = 0D;

        isReady_ = false;

        areaString_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return mahjong.mode.Mahjong.internal_static_SeatResponse_descriptor;
      }

      public mahjong.mode.Mahjong.SeatResponse getDefaultInstanceForType() {
        return mahjong.mode.Mahjong.SeatResponse.getDefaultInstance();
      }

      public mahjong.mode.Mahjong.SeatResponse build() {
        mahjong.mode.Mahjong.SeatResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public mahjong.mode.Mahjong.SeatResponse buildPartial() {
        mahjong.mode.Mahjong.SeatResponse result = new mahjong.mode.Mahjong.SeatResponse(this);
        result.seatNo_ = seatNo_;
        result.iD_ = iD_;
        result.nickname_ = nickname_;
        result.gold_ = gold_;
        result.isReady_ = isReady_;
        result.areaString_ = areaString_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }

      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mahjong.mode.Mahjong.SeatResponse) {
          return mergeFrom((mahjong.mode.Mahjong.SeatResponse) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(mahjong.mode.Mahjong.SeatResponse other) {
        if (other == mahjong.mode.Mahjong.SeatResponse.getDefaultInstance()) return this;
        if (other.getSeatNo() != 0) {
          setSeatNo(other.getSeatNo());
        }
        if (other.getID() != 0) {
          setID(other.getID());
        }
        if (!other.getNickname().isEmpty()) {
          nickname_ = other.nickname_;
          onChanged();
        }
        if (other.getGold() != 0D) {
          setGold(other.getGold());
        }
        if (other.getIsReady() != false) {
          setIsReady(other.getIsReady());
        }
        if (!other.getAreaString().isEmpty()) {
          areaString_ = other.areaString_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        mahjong.mode.Mahjong.SeatResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mahjong.mode.Mahjong.SeatResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      /**
       * <pre>
       * 座位号
       * </pre>
       * <p>
       * <code>uint32 seatNo = 1;</code>
       */
      public int getSeatNo() {
        return seatNo_;
      }

      /**
       * <pre>
       * 座位号
       * </pre>
       * <p>
       * <code>uint32 seatNo = 1;</code>
       */
      public Builder setSeatNo(int value) {

        seatNo_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 座位号
       * </pre>
       * <p>
       * <code>uint32 seatNo = 1;</code>
       */
      public Builder clearSeatNo() {

        seatNo_ = 0;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 用户名
       * </pre>
       * <p>
       * <code>uint32 ID = 2;</code>
       */
      public int getID() {
        return iD_;
      }

      /**
       * <pre>
       * 用户名
       * </pre>
       * <p>
       * <code>uint32 ID = 2;</code>
       */
      public Builder setID(int value) {

        iD_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 用户名
       * </pre>
       * <p>
       * <code>uint32 ID = 2;</code>
       */
      public Builder clearID() {

        iD_ = 0;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 用户名
       * </pre>
       * <p>
       * <code>string nickname = 3;</code>
       */
      public java.lang.String getNickname() {
        java.lang.Object ref = nickname_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          nickname_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       * <pre>
       * 用户名
       * </pre>
       * <p>
       * <code>string nickname = 3;</code>
       */
      public Builder setNickname(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        nickname_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 用户名
       * </pre>
       * <p>
       * <code>string nickname = 3;</code>
       */
      public com.google.protobuf.ByteString
      getNicknameBytes() {
        java.lang.Object ref = nickname_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          nickname_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <pre>
       * 用户名
       * </pre>
       * <p>
       * <code>string nickname = 3;</code>
       */
      public Builder setNicknameBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        nickname_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 用户名
       * </pre>
       * <p>
       * <code>string nickname = 3;</code>
       */
      public Builder clearNickname() {

        nickname_ = getDefaultInstance().getNickname();
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 金币
       * </pre>
       * <p>
       * <code>double gold = 4;</code>
       */
      public double getGold() {
        return gold_;
      }

      /**
       * <pre>
       * 金币
       * </pre>
       * <p>
       * <code>double gold = 4;</code>
       */
      public Builder setGold(double value) {

        gold_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 金币
       * </pre>
       * <p>
       * <code>double gold = 4;</code>
       */
      public Builder clearGold() {

        gold_ = 0D;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 是否准备
       * </pre>
       * <p>
       * <code>bool isReady = 5;</code>
       */
      public boolean getIsReady() {
        return isReady_;
      }

      /**
       * <pre>
       * 是否准备
       * </pre>
       * <p>
       * <code>bool isReady = 5;</code>
       */
      public Builder setIsReady(boolean value) {

        isReady_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 是否准备
       * </pre>
       * <p>
       * <code>bool isReady = 5;</code>
       */
      public Builder clearIsReady() {

        isReady_ = false;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 地区
       * </pre>
       * <p>
       * <code>string areaString = 6;</code>
       */
      public java.lang.String getAreaString() {
        java.lang.Object ref = areaString_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          areaString_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       * <pre>
       * 地区
       * </pre>
       * <p>
       * <code>string areaString = 6;</code>
       */
      public Builder setAreaString(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        areaString_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 地区
       * </pre>
       * <p>
       * <code>string areaString = 6;</code>
       */
      public com.google.protobuf.ByteString
      getAreaStringBytes() {
        java.lang.Object ref = areaString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          areaString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <pre>
       * 地区
       * </pre>
       * <p>
       * <code>string areaString = 6;</code>
       */
      public Builder setAreaStringBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        areaString_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 地区
       * </pre>
       * <p>
       * <code>string areaString = 6;</code>
       */
      public Builder clearAreaString() {

        areaString_ = getDefaultInstance().getAreaString();
        onChanged();
        return this;
      }

      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:SeatResponse)
    }

  }

  /**
   * <pre>
   * 游戏开始 发牌
   * </pre>
   * <p>
   * Protobuf type {@code DealCardResponse}
   */
  public static final class DealCardResponse extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:DealCardResponse)
          DealCardResponseOrBuilder {
    public static final int BANKER_FIELD_NUMBER = 1;
    public static final int DICE_FIELD_NUMBER = 2;
    public static final int CARDS_FIELD_NUMBER = 3;
    private static final long serialVersionUID = 0L;
    // @@protoc_insertion_point(class_scope:DealCardResponse)
    private static final mahjong.mode.Mahjong.DealCardResponse DEFAULT_INSTANCE;
    private static final com.google.protobuf.Parser<DealCardResponse>
            PARSER = new com.google.protobuf.AbstractParser<DealCardResponse>() {
      public DealCardResponse parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new DealCardResponse(input, extensionRegistry);
      }
    };

    static {
      DEFAULT_INSTANCE = new mahjong.mode.Mahjong.DealCardResponse();
    }

    private int bitField0_;
    private int banker_;
    private java.util.List<java.lang.Integer> dice_;
    private int diceMemoizedSerializedSize = -1;
    private java.util.List<java.lang.Integer> cards_;
    private int cardsMemoizedSerializedSize = -1;
    private byte memoizedIsInitialized = -1;

    // Use DealCardResponse.newBuilder() to construct.
    private DealCardResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private DealCardResponse() {
      banker_ = 0;
      dice_ = java.util.Collections.emptyList();
      cards_ = java.util.Collections.emptyList();
    }

    private DealCardResponse(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              banker_ = input.readUInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                dice_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              dice_.add(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                dice_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                dice_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              cards_.add(input.readUInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          dice_ = java.util.Collections.unmodifiableList(dice_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mahjong.mode.Mahjong.internal_static_DealCardResponse_descriptor;
    }

    public static mahjong.mode.Mahjong.DealCardResponse parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.DealCardResponse parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.DealCardResponse parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.DealCardResponse parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.DealCardResponse parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.DealCardResponse parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.DealCardResponse parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.DealCardResponse parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.DealCardResponse parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.DealCardResponse parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.DealCardResponse parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.DealCardResponse parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(mahjong.mode.Mahjong.DealCardResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public static mahjong.mode.Mahjong.DealCardResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static com.google.protobuf.Parser<DealCardResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return mahjong.mode.Mahjong.internal_static_DealCardResponse_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      mahjong.mode.Mahjong.DealCardResponse.class, mahjong.mode.Mahjong.DealCardResponse.Builder.class);
    }

    /**
     * <pre>
     * 庄家
     * </pre>
     * <p>
     * <code>uint32 banker = 1;</code>
     */
    public int getBanker() {
      return banker_;
    }

    /**
     * <pre>
     * 骰子
     * </pre>
     * <p>
     * <code>repeated uint32 dice = 2;</code>
     */
    public java.util.List<java.lang.Integer>
    getDiceList() {
      return dice_;
    }

    /**
     * <pre>
     * 骰子
     * </pre>
     * <p>
     * <code>repeated uint32 dice = 2;</code>
     */
    public int getDiceCount() {
      return dice_.size();
    }

    /**
     * <pre>
     * 骰子
     * </pre>
     * <p>
     * <code>repeated uint32 dice = 2;</code>
     */
    public int getDice(int index) {
      return dice_.get(index);
    }

    /**
     * <pre>
     * 牌
     * </pre>
     * <p>
     * <code>repeated uint32 cards = 3;</code>
     */
    public java.util.List<java.lang.Integer>
    getCardsList() {
      return cards_;
    }

    /**
     * <pre>
     * 牌
     * </pre>
     * <p>
     * <code>repeated uint32 cards = 3;</code>
     */
    public int getCardsCount() {
      return cards_.size();
    }

    /**
     * <pre>
     * 牌
     * </pre>
     * <p>
     * <code>repeated uint32 cards = 3;</code>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      getSerializedSize();
      if (banker_ != 0) {
        output.writeUInt32(1, banker_);
      }
      if (getDiceList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(diceMemoizedSerializedSize);
      }
      for (int i = 0; i < dice_.size(); i++) {
        output.writeUInt32NoTag(dice_.get(i));
      }
      if (getCardsList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(cardsMemoizedSerializedSize);
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeUInt32NoTag(cards_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (banker_ != 0) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(1, banker_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dice_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
                  .computeUInt32SizeNoTag(dice_.get(i));
        }
        size += dataSize;
        if (!getDiceList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
        }
        diceMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
                  .computeUInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        if (!getCardsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
        }
        cardsMemoizedSerializedSize = dataSize;
      }
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof mahjong.mode.Mahjong.DealCardResponse)) {
        return super.equals(obj);
      }
      mahjong.mode.Mahjong.DealCardResponse other = (mahjong.mode.Mahjong.DealCardResponse) obj;

      boolean result = true;
      result = result && (getBanker()
              == other.getBanker());
      result = result && getDiceList()
              .equals(other.getDiceList());
      result = result && getCardsList()
              .equals(other.getCardsList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BANKER_FIELD_NUMBER;
      hash = (53 * hash) + getBanker();
      if (getDiceCount() > 0) {
        hash = (37 * hash) + DICE_FIELD_NUMBER;
        hash = (53 * hash) + getDiceList().hashCode();
      }
      if (getCardsCount() > 0) {
        hash = (37 * hash) + CARDS_FIELD_NUMBER;
        hash = (53 * hash) + getCardsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DealCardResponse> getParserForType() {
      return PARSER;
    }

    public mahjong.mode.Mahjong.DealCardResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    /**
     * <pre>
     * 游戏开始 发牌
     * </pre>
     * <p>
     * Protobuf type {@code DealCardResponse}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:DealCardResponse)
            mahjong.mode.Mahjong.DealCardResponseOrBuilder {
      private int bitField0_;
      private int banker_;
      private java.util.List<java.lang.Integer> dice_ = java.util.Collections.emptyList();
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();

      // Construct using mahjong.mode.Mahjong.DealCardResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return mahjong.mode.Mahjong.internal_static_DealCardResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return mahjong.mode.Mahjong.internal_static_DealCardResponse_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        mahjong.mode.Mahjong.DealCardResponse.class, mahjong.mode.Mahjong.DealCardResponse.Builder.class);
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }

      public Builder clear() {
        super.clear();
        banker_ = 0;

        dice_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return mahjong.mode.Mahjong.internal_static_DealCardResponse_descriptor;
      }

      public mahjong.mode.Mahjong.DealCardResponse getDefaultInstanceForType() {
        return mahjong.mode.Mahjong.DealCardResponse.getDefaultInstance();
      }

      public mahjong.mode.Mahjong.DealCardResponse build() {
        mahjong.mode.Mahjong.DealCardResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public mahjong.mode.Mahjong.DealCardResponse buildPartial() {
        mahjong.mode.Mahjong.DealCardResponse result = new mahjong.mode.Mahjong.DealCardResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.banker_ = banker_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          dice_ = java.util.Collections.unmodifiableList(dice_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.dice_ = dice_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.cards_ = cards_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }

      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mahjong.mode.Mahjong.DealCardResponse) {
          return mergeFrom((mahjong.mode.Mahjong.DealCardResponse) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(mahjong.mode.Mahjong.DealCardResponse other) {
        if (other == mahjong.mode.Mahjong.DealCardResponse.getDefaultInstance()) return this;
        if (other.getBanker() != 0) {
          setBanker(other.getBanker());
        }
        if (!other.dice_.isEmpty()) {
          if (dice_.isEmpty()) {
            dice_ = other.dice_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureDiceIsMutable();
            dice_.addAll(other.dice_);
          }
          onChanged();
        }
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        mahjong.mode.Mahjong.DealCardResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mahjong.mode.Mahjong.DealCardResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      /**
       * <pre>
       *庄家
       * </pre>
       *
       * <code>uint32 banker = 1;</code>
       */
      public int getBanker() {
        return banker_;
      }

      /**
       * <pre>
       *庄家
       * </pre>
       *
       * <code>uint32 banker = 1;</code>
       */
      public Builder setBanker(int value) {

        banker_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       *庄家
       * </pre>
       *
       * <code>uint32 banker = 1;</code>
       */
      public Builder clearBanker() {

        banker_ = 0;
        onChanged();
        return this;
      }

      private void ensureDiceIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          dice_ = new java.util.ArrayList<java.lang.Integer>(dice_);
          bitField0_ |= 0x00000002;
        }
      }

      /**
       * <pre>
       *骰子
       * </pre>
       *
       * <code>repeated uint32 dice = 2;</code>
       */
      public java.util.List<java.lang.Integer>
      getDiceList() {
        return java.util.Collections.unmodifiableList(dice_);
      }

      /**
       * <pre>
       *骰子
       * </pre>
       *
       * <code>repeated uint32 dice = 2;</code>
       */
      public int getDiceCount() {
        return dice_.size();
      }

      /**
       * <pre>
       *骰子
       * </pre>
       *
       * <code>repeated uint32 dice = 2;</code>
       */
      public int getDice(int index) {
        return dice_.get(index);
      }

      /**
       * <pre>
       *骰子
       * </pre>
       *
       * <code>repeated uint32 dice = 2;</code>
       */
      public Builder setDice(
              int index, int value) {
        ensureDiceIsMutable();
        dice_.set(index, value);
        onChanged();
        return this;
      }

      /**
       * <pre>
       *骰子
       * </pre>
       *
       * <code>repeated uint32 dice = 2;</code>
       */
      public Builder addDice(int value) {
        ensureDiceIsMutable();
        dice_.add(value);
        onChanged();
        return this;
      }

      /**
       * <pre>
       *骰子
       * </pre>
       *
       * <code>repeated uint32 dice = 2;</code>
       */
      public Builder addAllDice(
              java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDiceIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, dice_);
        onChanged();
        return this;
      }

      /**
       * <pre>
       *骰子
       * </pre>
       *
       * <code>repeated uint32 dice = 2;</code>
       */
      public Builder clearDice() {
        dice_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00000004;
        }
      }

      /**
       * <pre>
       *牌
       * </pre>
       *
       * <code>repeated uint32 cards = 3;</code>
       */
      public java.util.List<java.lang.Integer>
      getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }

      /**
       * <pre>
       *牌
       * </pre>
       *
       * <code>repeated uint32 cards = 3;</code>
       */
      public int getCardsCount() {
        return cards_.size();
      }

      /**
       * <pre>
       * 牌
       * </pre>
       * <p>
       * <code>repeated uint32 cards = 3;</code>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }

      /**
       * <pre>
       * 牌
       * </pre>
       * <p>
       * <code>repeated uint32 cards = 3;</code>
       */
      public Builder setCards(
              int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 牌
       * </pre>
       * <p>
       * <code>repeated uint32 cards = 3;</code>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 牌
       * </pre>
       * <p>
       * <code>repeated uint32 cards = 3;</code>
       */
      public Builder addAllCards(
              java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, cards_);
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 牌
       * </pre>
       * <p>
       * <code>repeated uint32 cards = 3;</code>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:DealCardResponse)
    }

  }

  /**
   * <pre>
   * 碰
   * </pre>
   * <p>
   * Protobuf type {@code PengResponse}
   */
  public static final class PengResponse extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:PengResponse)
          PengResponseOrBuilder {
    public static final int CARD_FIELD_NUMBER = 2;
    private static final long serialVersionUID = 0L;
    // @@protoc_insertion_point(class_scope:PengResponse)
    private static final mahjong.mode.Mahjong.PengResponse DEFAULT_INSTANCE;
    private static final com.google.protobuf.Parser<PengResponse>
            PARSER = new com.google.protobuf.AbstractParser<PengResponse>() {
      public PengResponse parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new PengResponse(input, extensionRegistry);
      }
    };

    static {
      DEFAULT_INSTANCE = new mahjong.mode.Mahjong.PengResponse();
    }

    private int card_;
    private byte memoizedIsInitialized = -1;

    // Use PengResponse.newBuilder() to construct.
    private PengResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private PengResponse() {
      card_ = 0;
    }

    private PengResponse(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 16: {

              card_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return mahjong.mode.Mahjong.internal_static_PengResponse_descriptor;
    }

    public static mahjong.mode.Mahjong.PengResponse parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.PengResponse parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.PengResponse parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.PengResponse parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.PengResponse parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.PengResponse parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.PengResponse parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.PengResponse parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.PengResponse parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.PengResponse parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.PengResponse parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.PengResponse parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(mahjong.mode.Mahjong.PengResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public static mahjong.mode.Mahjong.PengResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static com.google.protobuf.Parser<PengResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return mahjong.mode.Mahjong.internal_static_PengResponse_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      mahjong.mode.Mahjong.PengResponse.class, mahjong.mode.Mahjong.PengResponse.Builder.class);
    }

    /**
     * <pre>
     * 牌
     * </pre>
     * <p>
     * <code>uint32 card = 2;</code>
     */
    public int getCard() {
      return card_;
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (card_ != 0) {
        output.writeUInt32(2, card_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (card_ != 0) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(2, card_);
      }
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof mahjong.mode.Mahjong.PengResponse)) {
        return super.equals(obj);
      }
      mahjong.mode.Mahjong.PengResponse other = (mahjong.mode.Mahjong.PengResponse) obj;

      boolean result = true;
      result = result && (getCard()
              == other.getCard());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CARD_FIELD_NUMBER;
      hash = (53 * hash) + getCard();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PengResponse> getParserForType() {
      return PARSER;
    }

    public mahjong.mode.Mahjong.PengResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    /**
     * <pre>
     * 碰
     * </pre>
     * <p>
     * Protobuf type {@code PengResponse}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:PengResponse)
            mahjong.mode.Mahjong.PengResponseOrBuilder {
      private int card_;

      // Construct using mahjong.mode.Mahjong.PengResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return mahjong.mode.Mahjong.internal_static_PengResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return mahjong.mode.Mahjong.internal_static_PengResponse_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        mahjong.mode.Mahjong.PengResponse.class, mahjong.mode.Mahjong.PengResponse.Builder.class);
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }

      public Builder clear() {
        super.clear();
        card_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return mahjong.mode.Mahjong.internal_static_PengResponse_descriptor;
      }

      public mahjong.mode.Mahjong.PengResponse getDefaultInstanceForType() {
        return mahjong.mode.Mahjong.PengResponse.getDefaultInstance();
      }

      public mahjong.mode.Mahjong.PengResponse build() {
        mahjong.mode.Mahjong.PengResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public mahjong.mode.Mahjong.PengResponse buildPartial() {
        mahjong.mode.Mahjong.PengResponse result = new mahjong.mode.Mahjong.PengResponse(this);
        result.card_ = card_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }

      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mahjong.mode.Mahjong.PengResponse) {
          return mergeFrom((mahjong.mode.Mahjong.PengResponse) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(mahjong.mode.Mahjong.PengResponse other) {
        if (other == mahjong.mode.Mahjong.PengResponse.getDefaultInstance()) return this;
        if (other.getCard() != 0) {
          setCard(other.getCard());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        mahjong.mode.Mahjong.PengResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mahjong.mode.Mahjong.PengResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      /**
       * <pre>
       * 牌
       * </pre>
       * <p>
       * <code>uint32 card = 2;</code>
       */
      public int getCard() {
        return card_;
      }

      /**
       * <pre>
       * 牌
       * </pre>
       * <p>
       * <code>uint32 card = 2;</code>
       */
      public Builder setCard(int value) {

        card_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 牌
       * </pre>
       * <p>
       * <code>uint32 card = 2;</code>
       */
      public Builder clearCard() {

        card_ = 0;
        onChanged();
        return this;
      }

      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:PengResponse)
    }

  }

  /**
   * <pre>
   * 暗杠或扒杠
   * </pre>
   * <p>
   * Protobuf type {@code Gang}
   */
  public static final class Gang extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:Gang)
          GangOrBuilder {
    public static final int CARD_FIELD_NUMBER = 1;
    private static final long serialVersionUID = 0L;
    // @@protoc_insertion_point(class_scope:Gang)
    private static final mahjong.mode.Mahjong.Gang DEFAULT_INSTANCE;
    private static final com.google.protobuf.Parser<Gang>
            PARSER = new com.google.protobuf.AbstractParser<Gang>() {
      public Gang parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new Gang(input, extensionRegistry);
      }
    };

    static {
      DEFAULT_INSTANCE = new mahjong.mode.Mahjong.Gang();
    }

    private int card_;
    private byte memoizedIsInitialized = -1;

    // Use Gang.newBuilder() to construct.
    private Gang(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private Gang() {
      card_ = 0;
    }

    private Gang(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              card_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return mahjong.mode.Mahjong.internal_static_Gang_descriptor;
    }

    public static mahjong.mode.Mahjong.Gang parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.Gang parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.Gang parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.Gang parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.Gang parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.Gang parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.Gang parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.Gang parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.Gang parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.Gang parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.Gang parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.Gang parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(mahjong.mode.Mahjong.Gang prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public static mahjong.mode.Mahjong.Gang getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static com.google.protobuf.Parser<Gang> parser() {
      return PARSER;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return mahjong.mode.Mahjong.internal_static_Gang_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      mahjong.mode.Mahjong.Gang.class, mahjong.mode.Mahjong.Gang.Builder.class);
    }

    /**
     * <pre>
     * 牌
     * </pre>
     * <p>
     * <code>uint32 card = 1;</code>
     */
    public int getCard() {
      return card_;
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (card_ != 0) {
        output.writeUInt32(1, card_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (card_ != 0) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(1, card_);
      }
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof mahjong.mode.Mahjong.Gang)) {
        return super.equals(obj);
      }
      mahjong.mode.Mahjong.Gang other = (mahjong.mode.Mahjong.Gang) obj;

      boolean result = true;
      result = result && (getCard()
              == other.getCard());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CARD_FIELD_NUMBER;
      hash = (53 * hash) + getCard();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Gang> getParserForType() {
      return PARSER;
    }

    public mahjong.mode.Mahjong.Gang getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    /**
     * <pre>
     * 暗杠或扒杠
     * </pre>
     * <p>
     * Protobuf type {@code Gang}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:Gang)
            mahjong.mode.Mahjong.GangOrBuilder {
      private int card_;

      // Construct using mahjong.mode.Mahjong.Gang.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return mahjong.mode.Mahjong.internal_static_Gang_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return mahjong.mode.Mahjong.internal_static_Gang_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        mahjong.mode.Mahjong.Gang.class, mahjong.mode.Mahjong.Gang.Builder.class);
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }

      public Builder clear() {
        super.clear();
        card_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return mahjong.mode.Mahjong.internal_static_Gang_descriptor;
      }

      public mahjong.mode.Mahjong.Gang getDefaultInstanceForType() {
        return mahjong.mode.Mahjong.Gang.getDefaultInstance();
      }

      public mahjong.mode.Mahjong.Gang build() {
        mahjong.mode.Mahjong.Gang result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public mahjong.mode.Mahjong.Gang buildPartial() {
        mahjong.mode.Mahjong.Gang result = new mahjong.mode.Mahjong.Gang(this);
        result.card_ = card_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }

      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mahjong.mode.Mahjong.Gang) {
          return mergeFrom((mahjong.mode.Mahjong.Gang) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(mahjong.mode.Mahjong.Gang other) {
        if (other == mahjong.mode.Mahjong.Gang.getDefaultInstance()) return this;
        if (other.getCard() != 0) {
          setCard(other.getCard());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        mahjong.mode.Mahjong.Gang parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mahjong.mode.Mahjong.Gang) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      /**
       * <pre>
       * 牌
       * </pre>
       * <p>
       * <code>uint32 card = 1;</code>
       */
      public int getCard() {
        return card_;
      }

      /**
       * <pre>
       * 牌
       * </pre>
       * <p>
       * <code>uint32 card = 1;</code>
       */
      public Builder setCard(int value) {

        card_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 牌
       * </pre>
       * <p>
       * <code>uint32 card = 1;</code>
       */
      public Builder clearCard() {

        card_ = 0;
        onChanged();
        return this;
      }

      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Gang)
    }

  }

  /**
   * <pre>
   * 吃
   * </pre>
   * <p>
   * Protobuf type {@code Chi}
   */
  public static final class Chi extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:Chi)
          ChiOrBuilder {
    public static final int CARDS_FIELD_NUMBER = 1;
    private static final long serialVersionUID = 0L;
    // @@protoc_insertion_point(class_scope:Chi)
    private static final mahjong.mode.Mahjong.Chi DEFAULT_INSTANCE;
    private static final com.google.protobuf.Parser<Chi>
            PARSER = new com.google.protobuf.AbstractParser<Chi>() {
      public Chi parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new Chi(input, extensionRegistry);
      }
    };

    static {
      DEFAULT_INSTANCE = new mahjong.mode.Mahjong.Chi();
    }

    private java.util.List<java.lang.Integer> cards_;
    private int cardsMemoizedSerializedSize = -1;
    private byte memoizedIsInitialized = -1;

    // Use Chi.newBuilder() to construct.
    private Chi(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private Chi() {
      cards_ = java.util.Collections.emptyList();
    }

    private Chi(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              cards_.add(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return mahjong.mode.Mahjong.internal_static_Chi_descriptor;
    }

    public static mahjong.mode.Mahjong.Chi parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.Chi parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.Chi parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.Chi parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.Chi parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.Chi parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.Chi parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.Chi parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.Chi parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.Chi parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.Chi parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.Chi parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(mahjong.mode.Mahjong.Chi prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public static mahjong.mode.Mahjong.Chi getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static com.google.protobuf.Parser<Chi> parser() {
      return PARSER;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return mahjong.mode.Mahjong.internal_static_Chi_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      mahjong.mode.Mahjong.Chi.class, mahjong.mode.Mahjong.Chi.Builder.class);
    }

    /**
     * <pre>
     * 牌
     * </pre>
     * <p>
     * <code>repeated uint32 cards = 1;</code>
     */
    public java.util.List<java.lang.Integer>
    getCardsList() {
      return cards_;
    }

    /**
     * <pre>
     * 牌
     * </pre>
     * <p>
     * <code>repeated uint32 cards = 1;</code>
     */
    public int getCardsCount() {
      return cards_.size();
    }

    /**
     * <pre>
     * 牌
     * </pre>
     * <p>
     * <code>repeated uint32 cards = 1;</code>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      getSerializedSize();
      if (getCardsList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(cardsMemoizedSerializedSize);
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeUInt32NoTag(cards_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
                  .computeUInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        if (!getCardsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
        }
        cardsMemoizedSerializedSize = dataSize;
      }
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof mahjong.mode.Mahjong.Chi)) {
        return super.equals(obj);
      }
      mahjong.mode.Mahjong.Chi other = (mahjong.mode.Mahjong.Chi) obj;

      boolean result = true;
      result = result && getCardsList()
              .equals(other.getCardsList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getCardsCount() > 0) {
        hash = (37 * hash) + CARDS_FIELD_NUMBER;
        hash = (53 * hash) + getCardsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Chi> getParserForType() {
      return PARSER;
    }

    public mahjong.mode.Mahjong.Chi getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    /**
     * <pre>
     * 吃
     * </pre>
     * <p>
     * Protobuf type {@code Chi}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:Chi)
            mahjong.mode.Mahjong.ChiOrBuilder {
      private int bitField0_;
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();

      // Construct using mahjong.mode.Mahjong.Chi.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return mahjong.mode.Mahjong.internal_static_Chi_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return mahjong.mode.Mahjong.internal_static_Chi_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        mahjong.mode.Mahjong.Chi.class, mahjong.mode.Mahjong.Chi.Builder.class);
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }

      public Builder clear() {
        super.clear();
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return mahjong.mode.Mahjong.internal_static_Chi_descriptor;
      }

      public mahjong.mode.Mahjong.Chi getDefaultInstanceForType() {
        return mahjong.mode.Mahjong.Chi.getDefaultInstance();
      }

      public mahjong.mode.Mahjong.Chi build() {
        mahjong.mode.Mahjong.Chi result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public mahjong.mode.Mahjong.Chi buildPartial() {
        mahjong.mode.Mahjong.Chi result = new mahjong.mode.Mahjong.Chi(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.cards_ = cards_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }

      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mahjong.mode.Mahjong.Chi) {
          return mergeFrom((mahjong.mode.Mahjong.Chi) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(mahjong.mode.Mahjong.Chi other) {
        if (other == mahjong.mode.Mahjong.Chi.getDefaultInstance()) return this;
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        mahjong.mode.Mahjong.Chi parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mahjong.mode.Mahjong.Chi) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00000001;
        }
      }

      /**
       * <pre>
       * 牌
       * </pre>
       * <p>
       * <code>repeated uint32 cards = 1;</code>
       */
      public java.util.List<java.lang.Integer>
      getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }

      /**
       * <pre>
       * 牌
       * </pre>
       * <p>
       * <code>repeated uint32 cards = 1;</code>
       */
      public int getCardsCount() {
        return cards_.size();
      }

      /**
       * <pre>
       * 牌
       * </pre>
       * <p>
       * <code>repeated uint32 cards = 1;</code>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }

      /**
       * <pre>
       * 牌
       * </pre>
       * <p>
       * <code>repeated uint32 cards = 1;</code>
       */
      public Builder setCards(
              int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 牌
       * </pre>
       * <p>
       * <code>repeated uint32 cards = 1;</code>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 牌
       * </pre>
       * <p>
       * <code>repeated uint32 cards = 1;</code>
       */
      public Builder addAllCards(
              java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, cards_);
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 牌
       * </pre>
       * <p>
       * <code>repeated uint32 cards = 1;</code>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Chi)
    }

  }

  /**
   * <pre>
   * 胡
   * </pre>
   * <p>
   * Protobuf type {@code HuResponse}
   */
  public static final class HuResponse extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:HuResponse)
          HuResponseOrBuilder {
    public static final int CARD_FIELD_NUMBER = 1;
    private static final long serialVersionUID = 0L;
    // @@protoc_insertion_point(class_scope:HuResponse)
    private static final mahjong.mode.Mahjong.HuResponse DEFAULT_INSTANCE;
    private static final com.google.protobuf.Parser<HuResponse>
            PARSER = new com.google.protobuf.AbstractParser<HuResponse>() {
      public HuResponse parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new HuResponse(input, extensionRegistry);
      }
    };

    static {
      DEFAULT_INSTANCE = new mahjong.mode.Mahjong.HuResponse();
    }

    private int card_;
    private byte memoizedIsInitialized = -1;

    // Use HuResponse.newBuilder() to construct.
    private HuResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private HuResponse() {
      card_ = 0;
    }

    private HuResponse(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              card_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return mahjong.mode.Mahjong.internal_static_HuResponse_descriptor;
    }

    public static mahjong.mode.Mahjong.HuResponse parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.HuResponse parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.HuResponse parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.HuResponse parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.HuResponse parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.HuResponse parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.HuResponse parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.HuResponse parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.HuResponse parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.HuResponse parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.HuResponse parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.HuResponse parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(mahjong.mode.Mahjong.HuResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public static mahjong.mode.Mahjong.HuResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static com.google.protobuf.Parser<HuResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return mahjong.mode.Mahjong.internal_static_HuResponse_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      mahjong.mode.Mahjong.HuResponse.class, mahjong.mode.Mahjong.HuResponse.Builder.class);
    }

    /**
     * <pre>
     * 牌
     * </pre>
     * <p>
     * <code>uint32 card = 1;</code>
     */
    public int getCard() {
      return card_;
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (card_ != 0) {
        output.writeUInt32(1, card_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (card_ != 0) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(1, card_);
      }
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof mahjong.mode.Mahjong.HuResponse)) {
        return super.equals(obj);
      }
      mahjong.mode.Mahjong.HuResponse other = (mahjong.mode.Mahjong.HuResponse) obj;

      boolean result = true;
      result = result && (getCard()
              == other.getCard());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CARD_FIELD_NUMBER;
      hash = (53 * hash) + getCard();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HuResponse> getParserForType() {
      return PARSER;
    }

    public mahjong.mode.Mahjong.HuResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    /**
     * <pre>
     * 胡
     * </pre>
     * <p>
     * Protobuf type {@code HuResponse}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:HuResponse)
            mahjong.mode.Mahjong.HuResponseOrBuilder {
      private int card_;

      // Construct using mahjong.mode.Mahjong.HuResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return mahjong.mode.Mahjong.internal_static_HuResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return mahjong.mode.Mahjong.internal_static_HuResponse_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        mahjong.mode.Mahjong.HuResponse.class, mahjong.mode.Mahjong.HuResponse.Builder.class);
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }

      public Builder clear() {
        super.clear();
        card_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return mahjong.mode.Mahjong.internal_static_HuResponse_descriptor;
      }

      public mahjong.mode.Mahjong.HuResponse getDefaultInstanceForType() {
        return mahjong.mode.Mahjong.HuResponse.getDefaultInstance();
      }

      public mahjong.mode.Mahjong.HuResponse build() {
        mahjong.mode.Mahjong.HuResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public mahjong.mode.Mahjong.HuResponse buildPartial() {
        mahjong.mode.Mahjong.HuResponse result = new mahjong.mode.Mahjong.HuResponse(this);
        result.card_ = card_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }

      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mahjong.mode.Mahjong.HuResponse) {
          return mergeFrom((mahjong.mode.Mahjong.HuResponse) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(mahjong.mode.Mahjong.HuResponse other) {
        if (other == mahjong.mode.Mahjong.HuResponse.getDefaultInstance()) return this;
        if (other.getCard() != 0) {
          setCard(other.getCard());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        mahjong.mode.Mahjong.HuResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mahjong.mode.Mahjong.HuResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      /**
       * <pre>
       * 牌
       * </pre>
       * <p>
       * <code>uint32 card = 1;</code>
       */
      public int getCard() {
        return card_;
      }

      /**
       * <pre>
       * 牌
       * </pre>
       * <p>
       * <code>uint32 card = 1;</code>
       */
      public Builder setCard(int value) {

        card_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 牌
       * </pre>
       * <p>
       * <code>uint32 card = 1;</code>
       */
      public Builder clearCard() {

        card_ = 0;
        onChanged();
        return this;
      }

      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:HuResponse)
    }

  }

  /**
   * <pre>
   * 摸牌
   * </pre>
   * <p>
   * Protobuf type {@code GetCardResponse}
   */
  public static final class GetCardResponse extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:GetCardResponse)
          GetCardResponseOrBuilder {
    public static final int CARD_FIELD_NUMBER = 1;
    private static final long serialVersionUID = 0L;
    // @@protoc_insertion_point(class_scope:GetCardResponse)
    private static final mahjong.mode.Mahjong.GetCardResponse DEFAULT_INSTANCE;
    private static final com.google.protobuf.Parser<GetCardResponse>
            PARSER = new com.google.protobuf.AbstractParser<GetCardResponse>() {
      public GetCardResponse parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetCardResponse(input, extensionRegistry);
      }
    };

    static {
      DEFAULT_INSTANCE = new mahjong.mode.Mahjong.GetCardResponse();
    }

    private int card_;
    private byte memoizedIsInitialized = -1;

    // Use GetCardResponse.newBuilder() to construct.
    private GetCardResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private GetCardResponse() {
      card_ = 0;
    }

    private GetCardResponse(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              card_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return mahjong.mode.Mahjong.internal_static_GetCardResponse_descriptor;
    }

    public static mahjong.mode.Mahjong.GetCardResponse parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.GetCardResponse parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.GetCardResponse parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.GetCardResponse parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.GetCardResponse parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.GetCardResponse parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.GetCardResponse parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.GetCardResponse parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.GetCardResponse parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.GetCardResponse parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.GetCardResponse parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.GetCardResponse parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(mahjong.mode.Mahjong.GetCardResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public static mahjong.mode.Mahjong.GetCardResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static com.google.protobuf.Parser<GetCardResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return mahjong.mode.Mahjong.internal_static_GetCardResponse_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      mahjong.mode.Mahjong.GetCardResponse.class, mahjong.mode.Mahjong.GetCardResponse.Builder.class);
    }

    /**
     * <pre>
     * 牌
     * </pre>
     * <p>
     * <code>uint32 card = 1;</code>
     */
    public int getCard() {
      return card_;
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (card_ != 0) {
        output.writeUInt32(1, card_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (card_ != 0) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(1, card_);
      }
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof mahjong.mode.Mahjong.GetCardResponse)) {
        return super.equals(obj);
      }
      mahjong.mode.Mahjong.GetCardResponse other = (mahjong.mode.Mahjong.GetCardResponse) obj;

      boolean result = true;
      result = result && (getCard()
              == other.getCard());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CARD_FIELD_NUMBER;
      hash = (53 * hash) + getCard();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetCardResponse> getParserForType() {
      return PARSER;
    }

    public mahjong.mode.Mahjong.GetCardResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    /**
     * <pre>
     * 摸牌
     * </pre>
     * <p>
     * Protobuf type {@code GetCardResponse}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:GetCardResponse)
            mahjong.mode.Mahjong.GetCardResponseOrBuilder {
      private int card_;

      // Construct using mahjong.mode.Mahjong.GetCardResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return mahjong.mode.Mahjong.internal_static_GetCardResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return mahjong.mode.Mahjong.internal_static_GetCardResponse_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        mahjong.mode.Mahjong.GetCardResponse.class, mahjong.mode.Mahjong.GetCardResponse.Builder.class);
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }

      public Builder clear() {
        super.clear();
        card_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return mahjong.mode.Mahjong.internal_static_GetCardResponse_descriptor;
      }

      public mahjong.mode.Mahjong.GetCardResponse getDefaultInstanceForType() {
        return mahjong.mode.Mahjong.GetCardResponse.getDefaultInstance();
      }

      public mahjong.mode.Mahjong.GetCardResponse build() {
        mahjong.mode.Mahjong.GetCardResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public mahjong.mode.Mahjong.GetCardResponse buildPartial() {
        mahjong.mode.Mahjong.GetCardResponse result = new mahjong.mode.Mahjong.GetCardResponse(this);
        result.card_ = card_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }

      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mahjong.mode.Mahjong.GetCardResponse) {
          return mergeFrom((mahjong.mode.Mahjong.GetCardResponse) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(mahjong.mode.Mahjong.GetCardResponse other) {
        if (other == mahjong.mode.Mahjong.GetCardResponse.getDefaultInstance()) return this;
        if (other.getCard() != 0) {
          setCard(other.getCard());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        mahjong.mode.Mahjong.GetCardResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mahjong.mode.Mahjong.GetCardResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      /**
       * <pre>
       * 牌
       * </pre>
       * <p>
       * <code>uint32 card = 1;</code>
       */
      public int getCard() {
        return card_;
      }

      /**
       * <pre>
       * 牌
       * </pre>
       * <p>
       * <code>uint32 card = 1;</code>
       */
      public Builder setCard(int value) {

        card_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 牌
       * </pre>
       * <p>
       * <code>uint32 card = 1;</code>
       */
      public Builder clearCard() {

        card_ = 0;
        onChanged();
        return this;
      }

      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:GetCardResponse)
    }

  }

  /**
   * <pre>
   * 出牌
   * </pre>
   * <p>
   * Protobuf type {@code PlayCard}
   */
  public static final class PlayCard extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:PlayCard)
          PlayCardOrBuilder {
    public static final int CARD_FIELD_NUMBER = 1;
    private static final long serialVersionUID = 0L;
    // @@protoc_insertion_point(class_scope:PlayCard)
    private static final mahjong.mode.Mahjong.PlayCard DEFAULT_INSTANCE;
    private static final com.google.protobuf.Parser<PlayCard>
            PARSER = new com.google.protobuf.AbstractParser<PlayCard>() {
      public PlayCard parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlayCard(input, extensionRegistry);
      }
    };

    static {
      DEFAULT_INSTANCE = new mahjong.mode.Mahjong.PlayCard();
    }

    private int card_;
    private byte memoizedIsInitialized = -1;

    // Use PlayCard.newBuilder() to construct.
    private PlayCard(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private PlayCard() {
      card_ = 0;
    }

    private PlayCard(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              card_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return mahjong.mode.Mahjong.internal_static_PlayCard_descriptor;
    }

    public static mahjong.mode.Mahjong.PlayCard parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.PlayCard parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.PlayCard parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.PlayCard parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.PlayCard parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.PlayCard parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.PlayCard parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.PlayCard parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.PlayCard parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.PlayCard parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.PlayCard parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.PlayCard parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(mahjong.mode.Mahjong.PlayCard prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public static mahjong.mode.Mahjong.PlayCard getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static com.google.protobuf.Parser<PlayCard> parser() {
      return PARSER;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return mahjong.mode.Mahjong.internal_static_PlayCard_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      mahjong.mode.Mahjong.PlayCard.class, mahjong.mode.Mahjong.PlayCard.Builder.class);
    }

    /**
     * <pre>
     * 牌
     * </pre>
     * <p>
     * <code>uint32 card = 1;</code>
     */
    public int getCard() {
      return card_;
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (card_ != 0) {
        output.writeUInt32(1, card_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (card_ != 0) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(1, card_);
      }
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof mahjong.mode.Mahjong.PlayCard)) {
        return super.equals(obj);
      }
      mahjong.mode.Mahjong.PlayCard other = (mahjong.mode.Mahjong.PlayCard) obj;

      boolean result = true;
      result = result && (getCard()
              == other.getCard());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CARD_FIELD_NUMBER;
      hash = (53 * hash) + getCard();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PlayCard> getParserForType() {
      return PARSER;
    }

    public mahjong.mode.Mahjong.PlayCard getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    /**
     * <pre>
     * 出牌
     * </pre>
     * <p>
     * Protobuf type {@code PlayCard}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:PlayCard)
            mahjong.mode.Mahjong.PlayCardOrBuilder {
      private int card_;

      // Construct using mahjong.mode.Mahjong.PlayCard.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return mahjong.mode.Mahjong.internal_static_PlayCard_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return mahjong.mode.Mahjong.internal_static_PlayCard_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        mahjong.mode.Mahjong.PlayCard.class, mahjong.mode.Mahjong.PlayCard.Builder.class);
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }

      public Builder clear() {
        super.clear();
        card_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return mahjong.mode.Mahjong.internal_static_PlayCard_descriptor;
      }

      public mahjong.mode.Mahjong.PlayCard getDefaultInstanceForType() {
        return mahjong.mode.Mahjong.PlayCard.getDefaultInstance();
      }

      public mahjong.mode.Mahjong.PlayCard build() {
        mahjong.mode.Mahjong.PlayCard result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public mahjong.mode.Mahjong.PlayCard buildPartial() {
        mahjong.mode.Mahjong.PlayCard result = new mahjong.mode.Mahjong.PlayCard(this);
        result.card_ = card_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }

      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mahjong.mode.Mahjong.PlayCard) {
          return mergeFrom((mahjong.mode.Mahjong.PlayCard) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(mahjong.mode.Mahjong.PlayCard other) {
        if (other == mahjong.mode.Mahjong.PlayCard.getDefaultInstance()) return this;
        if (other.getCard() != 0) {
          setCard(other.getCard());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        mahjong.mode.Mahjong.PlayCard parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mahjong.mode.Mahjong.PlayCard) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      /**
       * <pre>
       * 牌
       * </pre>
       * <p>
       * <code>uint32 card = 1;</code>
       */
      public int getCard() {
        return card_;
      }

      /**
       * <pre>
       * 牌
       * </pre>
       * <p>
       * <code>uint32 card = 1;</code>
       */
      public Builder setCard(int value) {

        card_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 牌
       * </pre>
       * <p>
       * <code>uint32 card = 1;</code>
       */
      public Builder clearCard() {

        card_ = 0;
        onChanged();
        return this;
      }

      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:PlayCard)
    }

  }

  /**
   * <pre>
   * 喇叭
   * </pre>
   * <p>
   * Protobuf type {@code MessageResponse}
   */
  public static final class MessageResponse extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:MessageResponse)
          MessageResponseOrBuilder {
    public static final int MESSAGE_FIELD_NUMBER = 1;
    private static final long serialVersionUID = 0L;
    // @@protoc_insertion_point(class_scope:MessageResponse)
    private static final mahjong.mode.Mahjong.MessageResponse DEFAULT_INSTANCE;
    private static final com.google.protobuf.Parser<MessageResponse>
            PARSER = new com.google.protobuf.AbstractParser<MessageResponse>() {
      public MessageResponse parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new MessageResponse(input, extensionRegistry);
      }
    };

    static {
      DEFAULT_INSTANCE = new mahjong.mode.Mahjong.MessageResponse();
    }

    private volatile java.lang.Object message_;
    private byte memoizedIsInitialized = -1;

    // Use MessageResponse.newBuilder() to construct.
    private MessageResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private MessageResponse() {
      message_ = "";
    }

    private MessageResponse(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              message_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return mahjong.mode.Mahjong.internal_static_MessageResponse_descriptor;
    }

    public static mahjong.mode.Mahjong.MessageResponse parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.MessageResponse parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MessageResponse parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.MessageResponse parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MessageResponse parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static mahjong.mode.Mahjong.MessageResponse parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MessageResponse parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.MessageResponse parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MessageResponse parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.MessageResponse parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static mahjong.mode.Mahjong.MessageResponse parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }

    public static mahjong.mode.Mahjong.MessageResponse parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(mahjong.mode.Mahjong.MessageResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public static mahjong.mode.Mahjong.MessageResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static com.google.protobuf.Parser<MessageResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return mahjong.mode.Mahjong.internal_static_MessageResponse_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      mahjong.mode.Mahjong.MessageResponse.class, mahjong.mode.Mahjong.MessageResponse.Builder.class);
    }

    /**
     * <pre>
     * 内容
     * </pre>
     * <p>
     * <code>string message = 1;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }

    /**
     * <pre>
     * 内容
     * </pre>
     * <p>
     * <code>string message = 1;</code>
     */
    public com.google.protobuf.ByteString
    getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (!getMessageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, message_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getMessageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, message_);
      }
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof mahjong.mode.Mahjong.MessageResponse)) {
        return super.equals(obj);
      }
      mahjong.mode.Mahjong.MessageResponse other = (mahjong.mode.Mahjong.MessageResponse) obj;

      boolean result = true;
      result = result && getMessage()
              .equals(other.getMessage());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getMessage().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MessageResponse> getParserForType() {
      return PARSER;
    }

    public mahjong.mode.Mahjong.MessageResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    /**
     * <pre>
     * 喇叭
     * </pre>
     * <p>
     * Protobuf type {@code MessageResponse}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:MessageResponse)
            mahjong.mode.Mahjong.MessageResponseOrBuilder {
      private java.lang.Object message_ = "";

      // Construct using mahjong.mode.Mahjong.MessageResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return mahjong.mode.Mahjong.internal_static_MessageResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return mahjong.mode.Mahjong.internal_static_MessageResponse_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        mahjong.mode.Mahjong.MessageResponse.class, mahjong.mode.Mahjong.MessageResponse.Builder.class);
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }

      public Builder clear() {
        super.clear();
        message_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mahjong.mode.Mahjong.internal_static_MessageResponse_descriptor;
      }

      public mahjong.mode.Mahjong.MessageResponse getDefaultInstanceForType() {
        return mahjong.mode.Mahjong.MessageResponse.getDefaultInstance();
      }

      public mahjong.mode.Mahjong.MessageResponse build() {
        mahjong.mode.Mahjong.MessageResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public mahjong.mode.Mahjong.MessageResponse buildPartial() {
        mahjong.mode.Mahjong.MessageResponse result = new mahjong.mode.Mahjong.MessageResponse(this);
        result.message_ = message_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }

      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mahjong.mode.Mahjong.MessageResponse) {
          return mergeFrom((mahjong.mode.Mahjong.MessageResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(mahjong.mode.Mahjong.MessageResponse other) {
        if (other == mahjong.mode.Mahjong.MessageResponse.getDefaultInstance()) return this;
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        mahjong.mode.Mahjong.MessageResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (mahjong.mode.Mahjong.MessageResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      /**
       * <pre>
       *内容
       * </pre>
       *
       * <code>string message = 1;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       * <pre>
       *内容
       * </pre>
       *
       * <code>string message = 1;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        message_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       *内容
       * </pre>
       *
       * <code>string message = 1;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <pre>
       *内容
       * </pre>
       *
       * <code>string message = 1;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        message_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       *内容
       * </pre>
       *
       * <code>string message = 1;</code>
       */
      public Builder clearMessage() {

        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }

      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:MessageResponse)
    }

  }

  // @@protoc_insertion_point(outer_class_scope)
}
